{"version":3,"sources":["css/components/friendshipview.module.css","assets/idlablogo.jpg","Components/MainScreenComponent.js","Components/MiniDrawer.js","App.js","Components/HelpContainerComponent.js","serviceWorker.js","index.js","util/notifications.js","hooks/useContracts.js","util/NameSpaces.js","hooks/useNotifications.js","Components/DataUploadComponent.js","css/components/profilecard.module.css","assets/solid_background.jpg","Components/PlaygroundComponent.js","Components/BasicDataEditorComponent.js","Components/AdvancedDataEditorComponent.js","util/FileUtil.js","Components/NotificationsViewerComponent.js","Components/InProgressViewerComponent.js","hooks/useProfile.js","Components/ProfileViewerComponent.js","Components/ProfileEditorComponent.js","Components/HelpComponent.js","Components/LoginComponent.js","Components/ProfileCardComponent.js","Components/ProfileCardSelectorComponent.js","Components/FriendRequestComponent.js","Components/FriendshipViewComponent.js","Components/MapComponent.js","Components/FriendsOverviewComponent.js","Components/CreditsComponent.js","util/Util.js","util/FriendsController.js","util/QueryUtil.js","util/Cache.js"],"names":["module","exports","viewsWithoutWebId","MainScreenComponent","props","useState","selectedView","view","setview","id","clearCache","args","webId","setSelectedView","prop","className","generation","indexOf","type","showLoadingOrView","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","withWebId","React","open","setOpen","availableViews","defaultview","profile","isActive","item","activeDrawerItemMapping","sidebarComponents","sideBarItems","map","e","index","itemName","Divider","key","to","target","style","textDecoration","color","ListItem","button","ListItemIcon","icon","ListItemText","primary","label","getSidebarComponent","topbarComponents","topBarItems","MenuItem","onClick","IconButton","aria-label","getTopBarComponent","length","classes","useTheme","CssBaseline","AppBar","position","clsx","Toolbar","edge","Typography","variant","noWrap","hidelogout","LogoutButton","Drawer","paper","direction","fill","List","NotificationsMenuItem","notifications","useNotifications","Badge","badgeContent","App","useEffect","document","title","LoggedIn","LoggedOut","HelpContainerComponent","window","location","Boolean","hostname","match","ReactDOM","render","StrictMode","basename","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","data","require","default","notify","notificationBody","subjects","a","distinct","value","self","filter","subject","getInbox","inbox","postFile","ns","ldp","checkNewNotifications","currentNotificationIds","getNotificationMetadata","notificationMetadata","metadata","getStore","store","getQuads","notificationsMetadata","metadataObjects","quad","object","dct","modified","getNotification","notificationId","getRecursiveActivity","getStoreEntry","rdf","as","actor","summary","termType","predicate","p","useContracts","contracts","setContracts","demo","contractId","getContractData","contract","push","fetchInProgress","aliases","acl","arg","cal","cert","contact","dc","doap","foaf","http","httph","icalTZ","link","log","meeting","mo","owl","pad","patch","prov","qu","trip","rdfs","rss","sched","schema","sioc","solid","space","stat","tab","tabont","ui","vcard","wf","xsd","cco","dbo","ex","namedNode","u","namespaces","alias","expansion","localName","vocab","setNotifications","mounted","updateNotifications","newNotifications","concat","interval","setInterval","clearInterval","n","notLoaded","currentNotifications","newNotificationsMetadata","fetchNotifications","fireUpdateEvents","Promise","all","notification","Date","updatedNotifications","getProfileContracts","currentContracts","itemId","checkFriendRequest","proposal","creator","checkContractSubmittedStatus","updateFriendRequestStatus","patchProfileWithContract","proposalId","status","requestId","request","useStyle","DataUploadComponent","localStorage","getItem","turtle","setTurtle","parsedURI","parseURL","scheme","netLoc","storageLocation","setStorageLocation","warning","setWarning","ParserJsonld","Readable","snippet","JSON","parse","parser","input","read","stringify","output","import","quads","on","quadListToTTL","ttl","md","rowsMin","onChange","snippetId","putFile","removeItem","CustomSwitch","withStyles","switchBase","checked","track","Switch","PlaygroundComponent","setChecked","setError","setData","shaclResult","setShaclResult","handleDataFromChild","update","href","control","event","name","onData","body","contentToValidate","Buffer","toString","embeddingMethod","contentSyntax","validationType","reportSyntax","fetch","method","headers","result","decoder","TextDecoder","getReader","done","decode","err","setItem","BasicDataEditorComponent","template","gender","setGender","surname","setSurname","setName","fullName","setFullName","birthDate","setBirthDate","birthPlace","setBirthPlace","birthCountry","setBirthCountry","wkt","setWkt","selectedOption","setSelectedOption","handleFocusLoss","fillIntemplate","onBlur","required","component","row","InputLabelProps","shrink","dangerouslySetInnerHTML","__html","AdvancedDataEditorComponent","placeholder","auth","getFile","URI","showPopups","doRequest","patchFile","delCache","deleteFile","requestType","options","response","code","validStatusCodes","showErrorPopup","statusCode","alert","NotificationsViewerComponent","deleted","setDeleted","sortednotifications","sort","b","deleteNotification","Row","Col","NotificationCard","split","Value","src","toLocaleString","Button","viewrequest","viewfriends","getButton","styles","delete","marriageId","friendshipview","friendoverview","InProgressViewerComponent","sortedContracts","created","getContractStatus","date","viewMarriage","useProfile","setProfile","getProfileData","profileProps","bdate","ProfileViewerComponent","Object","keys","property","formatDate","clipboard","writeText","profileeditor","ProfileEditorComponent","useForm","defaultValues","register","handleSubmit","reset","onSubmit","newprofile","createDeleteInsertProfileDataQuery","controller","ref","HelpComponent","login","upload","friendrequest","running","maxWidth","media","height","LoginComponent","Card","CardActionArea","CardMedia","image","background","CardContent","gutterBottom","CardActions","LoginButton","popup","ProfileCardComponent","container","profilecardrow","sm","ProfileCardSelectorComponent","person","webIdInput","setWebIdInput","webIdChangeHandler","setvalue","warnings","isProfile","isComplete","undefined","getWarnings","Input","FriendRequestComponent","state","setState","validateSubmission","createFriendRequest","stateCopy","slice","INVITATIONACCEPTED","INVITATIONREFUSED","FriendshipViewComponent","setcontract","allcontacts","contacts","setContacts","getContactStatus","contactWebId","acceptedEvent","accepted","refusedEvent","refused","updateContacts","contactsToUpdate","officiateRequest","deleteFriendRequest","deleteRequest","setContactStatus","contactId","newstatus","updatedContacts","acceptRequest","refuseRequest","resend","sendContactInvitation","getContactButton","accept","refuse","refreshContacts","showContactStatus","officiateFriendship","ResendButton","setstate","pending","disabled","MapComponent","userContracts","friends","getFriends","locationObjects","setLocationObjects","getFriendLocations","locations","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","FriendsOverviewComponent","friend","idlablogo","CreditsComponent","playground","help","credits","useCache","cached","checkCache","text","responseData","N3","baseIRI","addQuads","setCache","getQuadObjVal","getQuadObjList","datastore","dd","String","getDate","padStart","getMonth","getFullYear","DataFactory","literal","blankNode","variable","proposalContacts","endsWith","getProposalName","Error","createFriendRequestBody","postbody","addContractPatch","patchbody","sentContacts","createFriendRequestInvitation","deleteRequestProfilePatch","authorId","createAcceptanceNotification","createRejectionNotification","createFriendRequestOfficialNotification","newStatus","createContractStatusPatch","proposalData","creatorId","quadList","toISOString","friendRequestId","promises","snippetLocation","parseSnippetData","wktString","coordinates","Parser","resolve","pref","extractLocation","s","encodeURIComponent","oldprofile","deleteClause","insertClause","deleteClauseString","insertClauseString","whereClauseString","statusvar","reject","writer","Writer","end","TTLCache","Cache","instance","createInstance","getInstance","cache","get","put","del"],"mappings":"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","file":"static/js/main.483b8565.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"entrycontainer\":\"friendshipview_entrycontainer__2ubMw\",\"profilecontainer\":\"friendshipview_profilecontainer__1lQ6H\",\"accept\":\"friendshipview_accept__1rHAV\",\"refuse\":\"friendshipview_refuse__JHpjm\",\"delete\":\"friendshipview_delete__1eRAN\"};","module.exports = __webpack_public_path__ + \"static/media/idlablogo.7fb32e69.jpg\";","import React, { useState } from 'react'\r\nimport ReactLoading from 'react-loading';\r\nimport { clearCache } from '../util/Cache';\r\n\r\nconst viewsWithoutWebId = ['help', 'login', 'playground', 'credits']\r\n\r\nconst MainScreenComponent = (props) => {\r\n\r\n  const [view, setview] = useState(props.selectedView)\r\n\r\n  if (!view || view.id !== props.selectedView.id) {\r\n    clearCache()\r\n    setview(props.selectedView)\r\n  }\r\n\r\n  const args = { webId: props.webId, setview: props.setSelectedView }\r\n  for (let prop in view.args || []){\r\n    args[prop] = view.args[prop]\r\n  }\r\n\r\n  const showLoadingOrView = (view) => {\r\n    if (viewsWithoutWebId.indexOf(view.id) !== -1) {\r\n      return view.generation(args)\r\n    }\r\n    return <ReactLoading type={\"cubes\"}/>\r\n\r\n  }\r\n\r\n  return (\r\n    <div id=\"mainscreencontainer\" className='container'>\r\n      { props.webId ? view.generation(args) : showLoadingOrView(view) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainScreenComponent\r\n","import React, {useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { availableViews, activeDrawerItemMapping } from '../util/Util';\r\nimport useNotifications from '../hooks/useNotifications';\r\nimport { withWebId } from '@inrupt/solid-react-components';\r\nimport MainScreenComponent from './MainScreenComponent';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { LogoutButton } from '@solid/react';\r\n\r\nimport '../css/Drawer.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nvar drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#0066cc\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst MiniDrawer = withWebId((props) => {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const [selectedView, setSelectedView] = useState(availableViews[props.defaultview] || availableViews.profile)\r\n\r\n  const isActive = (item) => item.id === activeDrawerItemMapping[selectedView.id]\r\n\r\n  const getSidebarComponent = (itemName, index) => {\r\n    const item = availableViews[itemName]\r\n    switch (itemName) {\r\n      case 'divider':\r\n        return (<Divider key={index}/>)\r\n      case 'br':\r\n        return (<br key={index}/>)\r\n      case 'help':\r\n        return (\r\n          <Link to=\"/help\" target=\"_blank\" style={{ textDecoration: 'none', color: \"black\" }} key={index}>\r\n            <ListItem button={true} className={isActive(item) ? 'active' : 'nonactive'} button >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          </Link>\r\n        )\r\n      default:\r\n        if (!item) return <div />\r\n        return (\r\n          <ListItem button={true} className={isActive(item) ? 'active' : 'nonactive'} button key={index} onClick={() => setSelectedView(item)}>\r\n            <ListItemIcon>{item.icon}</ListItemIcon>\r\n            <ListItemText primary={item.label} />\r\n          </ListItem>\r\n        )\r\n    }\r\n  }\r\n\r\n  const getTopBarComponent = (itemName, index) => {\r\n    const item = availableViews[itemName]\r\n    const className = index === 0 ? 'topmenuitem topmenuitemleft' : 'topmenuitem'\r\n    switch (itemName) {\r\n      case 'notifications':\r\n        return (\r\n          <NotificationsMenuItem item={item} className={className} webId={props.webId} setSelectedView={setSelectedView} index={index} key={'topmenuitem' + index}/>\r\n        )\r\n      default:\r\n        return (\r\n          <MenuItem className={className} onClick={() => setSelectedView(item)} key={index}>\r\n            <IconButton aria-label={item.label} color=\"inherit\">\r\n              {item.icon}\r\n            </IconButton>\r\n          </MenuItem>\r\n        )\r\n    }\r\n  }\r\n\r\n  const sideBarItems = props.sideBarItems || ['profile', 'friendrequest', 'running', 'friendoverview', 'map', 'upload', 'br', 'divider', 'playground', 'divider', 'help', 'credits']\r\n  const sidebarComponents = sideBarItems.map((e, index) => getSidebarComponent(e, index));\r\n\r\n  const topBarItems = props.topBarItems || ['notifications', 'help']\r\n  const topbarComponents = topBarItems.map((e, index) => getTopBarComponent(e, index))\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  drawerWidth = sidebarComponents.length ? drawerWidth : 0;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Link to=\"/\" target=\"_blank\">\r\n            <Typography variant=\"h6\" style={{color: \"white\"}} noWrap>\r\n              OSLO Opleiding\r\n            </Typography>\r\n          </Link>\r\n          {topbarComponents}\r\n          {props.hidelogout\r\n            ? <div />\r\n            : <MenuItem className='topmenuitem'>\r\n                <LogoutButton className=\"logoutButton\"/>\r\n              </MenuItem>}\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      {sidebarComponents.length\r\n      ?\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={`${clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })} sidebar`}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          <Toolbar className={`${classes.toolbar} toolbarcolor`}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon style={{fill: \"white\"}}/> : <ChevronLeftIcon style={{fill: \"white\"}}/>}\r\n            </IconButton>\r\n          </Toolbar>\r\n          <Divider />\r\n          <div className='sidebarcontent'>\r\n            <List>\r\n              {sidebarComponents}\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      : <div />}\r\n\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n        <MainScreenComponent webId={props.webId} selectedView={selectedView} setSelectedView ={setSelectedView} ></MainScreenComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default MiniDrawer\r\n\r\nconst NotificationsMenuItem = (props) => {\r\n  const notifications = useNotifications(props.webId);\r\n  /*let numberOfNotifications = notifications.length;\r\n\r\n  useEffect( () => {\r\n    numberOfNotifications = notifications.length;\r\n  }, [notifications]);*/\r\n\r\n  return (\r\n    <MenuItem className={props.className} onClick={() => props.setSelectedView(props.item)} key={props.index}>\r\n      <IconButton aria-label={props.item.label} color=\"inherit\">\r\n          <Badge badgeContent={notifications.length} color=\"secondary\">\r\n            {props.item.icon}\r\n          </Badge>\r\n      </IconButton>\r\n    </MenuItem>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport './App.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { LoggedIn, LoggedOut } from '@solid/react'\r\nimport MiniDrawer from './Components/MiniDrawer'\r\nfunction App () {\r\n\r\n\r\n  useEffect(() => {\r\n    document.title = \"OSLO | Demo\";\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <LoggedIn>\r\n        <MiniDrawer defaultview='profile'/>\r\n      </LoggedIn>\r\n      <LoggedOut>\r\n        <MiniDrawer defaultview='login' sideBarItems={['login', 'playground', 'divider', 'help', 'credits']} topBarItems={['help']} hidelogout={true}/>\r\n      </LoggedOut>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from 'react'\r\nimport MiniDrawer from './MiniDrawer'\r\n\r\nexport default function HelpContainerComponent() {\r\n\r\n  useEffect(() => {\r\n    document.title = \"Help - OSLO Solid Demo \";\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n    <h1>{`${window.location}`}</h1>\r\n    <MiniDrawer defaultview='help' sideBarItems={[]} topBarItems={[]} hidelogout={true}></MiniDrawer>\r\n    </div>\r\n\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport HelpContainerComponent from './Components/HelpContainerComponent'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Route, Link, HashRouter as Router, Switch } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n    <Router basename='/'>\r\n      <Switch>\r\n        <Route path=\"/help\">\r\n          <HelpContainerComponent />\r\n        </Route>\r\n        {/* The default route */}\r\n        <Route path=\"/\">\r\n          <App />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { postFile } from \"./FileUtil\";\r\nimport { getStore } from \"../util/Util\"\r\nimport ns from \"../util/NameSpaces\"\r\nconst { default: data } = require('@solid/query-ldflex');\r\n\r\nexport default async function notify(notificationBody, subjects) {\r\n  const distinct = (value, index, self) => self.indexOf(value) === index;\r\n  for (let subject of subjects.filter(distinct)) {\r\n    const inbox = await getInbox(subject);\r\n    if (inbox) postFile(inbox, notificationBody)\r\n  }\r\n}\r\n\r\nasync function getInbox(subject){\r\n  const inbox = await data[subject][ns.ldp('inbox')]\r\n  if(!inbox) console.error(subject + ' does not profide an inbox.')\r\n  return inbox && inbox.value\r\n}\r\n\r\nexport async function checkNewNotifications(webId, currentNotificationIds) {\r\n  const notificationMetadata = await getNotificationMetadata(webId)\r\n  return notificationMetadata.filter(metadata => currentNotificationIds.indexOf(metadata.id) === -1)\r\n}\r\n\r\n/**\r\n * Get the notification metadata from the inbox folder\r\n * @param {string} webId\r\n */\r\nexport async function getNotificationMetadata(webId) {\r\n  const inbox = await getInbox(webId)\r\n  if(!inbox) return []\r\n  const store = await getStore(inbox, false, 0)\r\n  if (!store) return [];\r\n  const notificationsMetadata = await store.getQuads(inbox, ns.ldp('contains'))\r\n  const metadataObjects = notificationsMetadata.map(quad => { return ( {id: quad.object.value})})\r\n  for (let metadata of metadataObjects) {\r\n    const modified = await store.getQuads(metadata.id, ns.dct('modified'), null)\r\n    metadata['modified'] = modified && modified[0].object.value\r\n  }\r\n  return metadataObjects\r\n}\r\n\r\nexport async function getNotification(notificationId) {\r\n  const store = await getStore(notificationId)\r\n  if (!store) return null\r\n  return await getRecursiveActivity(store, notificationId)\r\n}\r\n\r\nasync function getRecursiveActivity(store, id){\r\n  let type = await getStoreEntry(store, id, ns.rdf('type'))\r\n  let actor = await getStoreEntry(store, id, ns.as('actor'))\r\n  let object = await getStoreEntry(store, id, ns.as('object'))\r\n  let target = await getStoreEntry(store, id, ns.as('target'))\r\n  let summary = await getStoreEntry(store, id, ns.as('summary'))\r\n  type = type && type.value\r\n  summary = summary && summary.value\r\n  actor = actor && actor.termType == 'BlankNode' ? await getRecursiveActivity(store, actor.id) : actor && actor.value\r\n  object = object && object.termType == 'BlankNode' ? await getRecursiveActivity(store, object.id) : object && object.value\r\n  target = target && target.termType == 'BlankNode' ? await getRecursiveActivity(store, target.id) : target && target.value\r\n  return { type, actor, object, target, summary }\r\n}\r\n\r\nasync function getStoreEntry(store, id, predicate){\r\n  const p = await store.getQuads(id, predicate, null)\r\n  return (p && p.length && p[0].object || null)\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport ns from \"../util/NameSpaces\"\r\nimport { getContractData } from '../util/Util';\r\n\r\nconst { default: data } = require('@solid/query-ldflex');\r\n\r\nconst useContracts = function(webId) {\r\n  const [contracts, setContracts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true\r\n    async function fetchInProgress(webId){\r\n      webId = await webId;\r\n      data.clearCache() // data.clearCache(webId)\r\n      let contracts = []\r\n      for await (const contractId of data[webId][ns.demo('hasContract')]){\r\n        const contract = await getContractData(contractId && contractId.value, false)\r\n        if(contract) contracts.push(contract)\r\n      }\r\n      return contracts\r\n    }\r\n    fetchInProgress(webId).then(contracts => {\r\n      setContracts(contracts)\r\n    })\r\n    return () => {\r\n      mounted = false\r\n    }\r\n  }, [webId])\r\n  return contracts\r\n}\r\n\r\nexport default useContracts\r\n","/**\r\n * Provides a way to access commonly used namespaces\r\n *\r\n * Usage:\r\n *\r\n *   ```\r\n *   const $rdf = require('rdflib'); //or any other RDF/JS-compatible library\r\n *   const ns = require('solid-namespace')($rdf);\r\n *   const store = $rdf.graph();\r\n *\r\n *   let me = ...;\r\n *   let name = store.any(me, ns.vcard(‘fn’)) || store.any(me, ns.foaf(‘name’));\r\n *   ```\r\n * @module vocab\r\n */\r\nconst aliases = {\r\n  acl: 'http://www.w3.org/ns/auth/acl#',\r\n  arg: 'http://www.w3.org/ns/pim/arg#',\r\n  as: 'https://www.w3.org/ns/activitystreams#',\r\n  cal: 'http://www.w3.org/2002/12/cal/ical#',\r\n  cert: 'http://www.w3.org/ns/auth/cert#',\r\n  contact: 'http://www.w3.org/2000/10/swap/pim/contact#',\r\n  dc: 'http://purl.org/dc/elements/1.1/',\r\n  dct: 'http://purl.org/dc/terms/',\r\n  doap: 'http://usefulinc.com/ns/doap#',\r\n  foaf: 'http://xmlns.com/foaf/0.1/',\r\n  http: 'http://www.w3.org/2007/ont/http#',\r\n  httph: 'http://www.w3.org/2007/ont/httph#',\r\n  icalTZ: 'http://www.w3.org/2002/12/cal/icaltzd#', // Beware: not cal:\r\n  ldp: 'http://www.w3.org/ns/ldp#',\r\n  link: 'http://www.w3.org/2007/ont/link#',\r\n  log: 'http://www.w3.org/2000/10/swap/log#',\r\n  meeting: 'http://www.w3.org/ns/pim/meeting#',\r\n  mo: 'http://purl.org/ontology/mo/',\r\n  owl: 'http://www.w3.org/2002/07/owl#',\r\n  pad: 'http://www.w3.org/ns/pim/pad#',\r\n  patch: 'http://www.w3.org/ns/pim/patch#',\r\n  prov: 'http://www.w3.org/ns/prov#',\r\n  qu: 'http://www.w3.org/2000/10/swap/pim/qif#',\r\n  trip: 'http://www.w3.org/ns/pim/trip#',\r\n  rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\r\n  rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\r\n  rss: 'http://purl.org/rss/1.0/',\r\n  sched: 'http://www.w3.org/ns/pim/schedule#',\r\n  schema: 'http://schema.org/', // @@ beware confusion with documents no 303\r\n  sioc: 'http://rdfs.org/sioc/ns#',\r\n  solid: 'http://www.w3.org/ns/solid/terms#',\r\n  space: 'http://www.w3.org/ns/pim/space#',\r\n  stat: 'http://www.w3.org/ns/posix/stat#',\r\n  tab: 'http://www.w3.org/2007/ont/link#',\r\n  tabont: 'http://www.w3.org/2007/ont/link#',\r\n  ui: 'http://www.w3.org/ns/ui#',\r\n  vcard: 'http://www.w3.org/2006/vcard/ns#',\r\n  wf: 'http://www.w3.org/2005/01/wf/flow#',\r\n  xsd: 'http://www.w3.org/2001/XMLSchema#',\r\n  cco: 'http://www.ontologyrepository.com/CommonCoreOntologies/',\r\n\r\n  dbo : 'http://dbpedia.org/ontology/',\r\n  ex : 'http://example.com/',\r\n  demo: 'http://oslodemo.example/',\r\n}\r\n\r\n/**\r\n * @param [rdflib] {RDF} Optional RDF Library (such as rdflib.js or rdf-ext) to inject\r\n */\r\nconst vocab = function (rdf = { namedNode: u => u }) {\r\n  const namespaces = {}\r\n  for (const alias in aliases) {\r\n    const expansion = aliases[alias]\r\n    namespaces[alias] = function (localName = '') {\r\n      return rdf.namedNode(expansion + localName)\r\n    }\r\n  };\r\n\r\n  return namespaces\r\n};\r\n\r\nconst ns = vocab()\r\nexport default ns\r\n","import { useState, useEffect } from 'react';\r\nimport { getNotificationMetadata, getNotification, checkNewNotifications } from '../util/notifications';\r\nimport { getNotificationTypes, getProfileContracts, getContractData, getCertificateData } from '../util/Util';\r\nimport ns from '../util/NameSpaces';\r\nimport {updateFriendRequestStatus, patchProfileWithContract} from \"../util/FriendsController\";\r\nconst TIMEOUT = 10 * 1000\r\n\r\n// const { default: data } = require('@solid/query-ldflex');\r\n\r\nconst useNotifications = function(webId) {\r\n  const [notifications, setNotifications] = useState([]);\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    updateNotifications(webId, notifications).then( newNotifications => {\r\n      if (mounted && newNotifications && newNotifications.length) setNotifications(notifications.concat(newNotifications))\r\n    })\r\n    const interval = setInterval(() => {\r\n      updateNotifications(webId, notifications).then( newNotifications => {\r\n        if (mounted && newNotifications && newNotifications.length) setNotifications(notifications.concat(newNotifications))\r\n      })\r\n    }, TIMEOUT);\r\n    return () => {\r\n      clearInterval(interval);\r\n      mounted = false;\r\n    }\r\n  }, [webId, notifications])\r\n  return notifications.filter(n => !n.metadata.notLoaded)\r\n\r\n  // TODO:: dont fetch notifications that have already been fetched\r\n\r\n  async function updateNotifications(webId, currentNotifications){\r\n    if(webId){\r\n      const newNotificationsMetadata = await checkNewNotifications(webId, currentNotifications.map(n => n.metadata.id))\r\n      if(newNotificationsMetadata && newNotificationsMetadata.length) {\r\n        const newNotifications = (await fetchNotifications(newNotificationsMetadata)) || []\r\n        fireUpdateEvents(newNotifications)\r\n        return newNotifications\r\n      }\r\n    }\r\n    return []\r\n  }\r\n\r\n\r\n  async function fetchNotifications(notificationsMetadata){\r\n    if(!notificationsMetadata) return []\r\n    const notifications = await Promise.all(notificationsMetadata.map(\r\n      async function(metadata){\r\n        let notification = await getNotification(metadata.id);\r\n        if (!notification) {\r\n          notification = {}\r\n          metadata.notLoaded = true;\r\n          notification.metadata = metadata;\r\n          return notification\r\n        }\r\n        try {\r\n          // metadata.types = await getNotificationTypes(notification)\r\n          metadata.modified = metadata.modified && new Date(metadata.modified)\r\n          notification.metadata = metadata;\r\n          return notification\r\n        } catch (e) {\r\n          metadata.notLoaded = true;\r\n          notification.metadata = metadata;\r\n          return notification\r\n        }\r\n    }))\r\n    return notifications\r\n  }\r\n\r\n\r\n  /**\r\n   * This function is responsible to update the contracts status of the current user based on the incoming notifications.\r\n   * This should be placed somewhere else in the future\r\n   */\r\n  //TODO: rewrite this function\r\n  async function fireUpdateEvents(updatedNotifications){\r\n    const currentContracts = await getProfileContracts(webId)\r\n    for (const notification of updatedNotifications) {\r\n      const itemId = notification.type === ns.as('Announce') ? notification.object && notification.object.object : notification.target\r\n      const proposal = await checkFriendRequest(itemId)\r\n      //const certificate = await checkCertificate(itemId)\r\n      if(proposal && proposal.creator===webId && notification.object && notification.object.type && notification.object.type === ns.as('Reject')) {\r\n        // set proposal status to rejected\r\n        if (await checkContractSubmittedStatus(proposal.id)){\r\n          const result = await updateFriendRequestStatus(proposal.id, \"rejected\")\r\n        }\r\n\r\n      } else if(proposal && currentContracts.indexOf(itemId) === -1) {\r\n        // patch profile with contract\r\n        await patchProfileWithContract(webId, itemId)\r\n      } /*else if(certificate) {\r\n        console.log(`We are here`);\r\n        // set proposal status to accepted\r\n        if (await checkContractSubmittedStatus(certificate.certifies)) {\r\n          await updateProposalStatus(webId, itemId, certificate.certifies, 'accepted')\r\n        }\r\n      }*/\r\n    }\r\n  }\r\n\r\n  async function checkContractSubmittedStatus(proposalId) {\r\n    if (!proposalId) return null\r\n    const proposal = await getContractData(proposalId)\r\n    return (proposal && proposal.status === ns.demo('submitted') && proposal.creator === webId)\r\n  }\r\n\r\n  async function checkFriendRequest(requestId){\r\n    if (!requestId) return null\r\n    const request = await getContractData(requestId)\r\n    return (request && request.type === ns.demo('FriendRequest')) ? request : null\r\n  }\r\n\r\n  /*async function checkCertificate(certificateId){\r\n    if (!certificateId) return null\r\n    const certificate = await getCertificateData(certificateId)\r\n    return (certificate && certificate.type === ns.demo('Certificate')) ? certificate : null\r\n  }\r\n\r\n  async function checkProposalCertified(proposalId){\r\n    const proposal = await getContractData(proposalId)\r\n    return proposal.certified_by\r\n  }\r\n\r\n\r\n  async function updateProposalStatus(webId, certificateId, proposalId, status){\r\n    if(! await checkProposalCertified(proposalId)){\r\n      await setProposalValidatedBy(proposalId, certificateId, status)\r\n    }\r\n  }*/\r\n}\r\n\r\nexport default useNotifications\r\n","import React, {useEffect, useState} from 'react';\r\nimport {parseURL} from 'url-toolkit';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {Input} from \"@material-ui/core\";\r\nimport {DropzoneArea} from \"material-ui-dropzone\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\r\nimport {uploadDataSnippet} from \"../util/Util\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport {LoggedIn} from \"@solid/react\";\r\nimport {putFile} from \"../util/FileUtil\";\r\nimport { Parser } from \"n3\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport {quadListToTTL} from \"../util/QueryUtil\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\n\r\nconst useStyle = makeStyles({\r\n    root: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nconst DataUploadComponent = (props) => {\r\n    const classes = useStyle();\r\n    const [data, setData] = useState(localStorage.getItem('snippet') || null);\r\n    const [turtle, setTurtle] = useState('');\r\n    const parsedURI = parseURL(props.webId)\r\n    const [storageLocation, setStorageLocation] = useState(parsedURI.scheme + parsedURI.netLoc + '/public/');\r\n    const [warning, setWarning] = useState(null);\r\n\r\n    const ParserJsonld = require('@rdfjs/parser-jsonld');\r\n    const Readable = require('stream').Readable;\r\n\r\n\r\n    useEffect( () => {\r\n        if(!data){\r\n            setWarning(\"The snippet can not be found at local storage. Did you upload it? \");\r\n            return;\r\n        }\r\n\r\n        console.log(data);\r\n        const snippet = JSON.parse(data);\r\n        snippet['@id'] = props.webId;\r\n        const parser = new ParserJsonld();\r\n        const input = new Readable({\r\n            read: () => {\r\n                input.push(JSON.stringify(snippet));\r\n                input.push(null);\r\n            }\r\n        });\r\n        const output = parser.import(input);\r\n        let quads = [];\r\n        output.on('data', quad => {\r\n            quads.push(quad);\r\n        });\r\n\r\n        output.on('end', () => {\r\n            quadListToTTL(quads).then(ttl => {\r\n                setTurtle(ttl);\r\n            });\r\n        })\r\n    }, [data]);\r\n\r\n    const warningStyle = {\r\n        color: 'red',\r\n    };\r\n\r\n\r\n    const uploadToPod = () => {\r\n        const snippetId = storageLocation + 'person.ttl';\r\n        putFile(snippetId, turtle).then( () => {\r\n            localStorage.removeItem('snippet');\r\n        });\r\n    }\r\n\r\n    const updateStorageLocation = (e) => {\r\n        setStorageLocation(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container leftaligntext\">\r\n            <Row className=\"container centeraligntext\">\r\n                <Col md={1}/>\r\n                <Col md={11}><h4>Upload data to Solid Pod</h4></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={1}/>\r\n                <Col md={11}>\r\n                    <p>Now that you have your own Solid Pod, let's store your data snippet in there. First, load the data back in from the local storage and then upload it!</p>\r\n                    <p>At the moment, Solid is most familiar with the data format Turtle, therefore we convert our JSON-LD to Turtle which is visible in the textarea below. If you take a close look at the transformed data,\r\n                    you will see that the RDF structure, triples, are more clear in this format.</p>\r\n                    <p>Let's hit the upload button and get on with this tutorial!</p>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            {warning && <Row><Col md={1}/><Col md={11}><b style={warningStyle}>{warning}</b></Col></Row>}\r\n            <Row>\r\n                <Col md={1}/>\r\n                <Col md={11}>\r\n                    <TextareaAutosize className={classes.root} rowsMin={15} value={turtle}/>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row className='propertyview'>\r\n                <Col md={1}/>\r\n                <Col md={2}><label className='leftaligntext'>{\"Storage Location\"}</label></Col>\r\n                <Col md={8}><Input className='storageLocation leftaligntext' value={storageLocation}\r\n                           onChange={updateStorageLocation}/></Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col md={1}></Col>\r\n                <Col md={11}>\r\n                    <Button onClick={uploadToPod}>Upload to Solid Pod</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataUploadComponent;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profilecard_container__ltkPd\",\"propertylabel\":\"profilecard_propertylabel__1oWIA\",\"valuelabel\":\"profilecard_valuelabel__1uAY6\",\"listitem\":\"profilecard_listitem__1814D\",\"rowcontainer\":\"profilecard_rowcontainer__3ZaE9\",\"profilecardrow\":\"profilecard_profilecardrow__115wk\"};","module.exports = __webpack_public_path__ + \"static/media/solid_background.5969ee5b.jpg\";","import React, {useState} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport BasicDataEditorComponent from \"./BasicDataEditorComponent\";\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport AdvancedDataEditorComponent from \"./AdvancedDataEditorComponent\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {LoggedOut, LoggedIn} from \"@solid/react\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport DataUploadComponent from \"./DataUploadComponent\";\r\n\r\nconst SHACL_ENDPOINT = 'https://test.data.vlaanderen.be/shacl-validator-backend/shacl/applicatieprofielen/api/validate'\r\nconst SHACL_SHAPE = 'persoon_basis'\r\n\r\nconst CustomSwitch = withStyles({\r\n    switchBase: {\r\n        color: '#0066cc',\r\n        '&$checked': {\r\n            color: '#0066cc',\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: '#0066cc',\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch);\r\n\r\nconst useStyle = makeStyles({\r\n    root: {\r\n        width: '100%'\r\n    }\r\n})\r\n\r\nconst PlaygroundComponent = (props) => {\r\n    const [checked, setChecked] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [data, setData] = useState(localStorage.getItem('snippet') || null);\r\n    const [shaclResult, setShaclResult] = useState(null);\r\n\r\n    const classes = useStyle();\r\n\r\n    const handleChange = event => {\r\n        setChecked(event.target.checked);\r\n    }\r\n\r\n    const handleDataFromChild = (update) => {\r\n        setData(update);\r\n    }\r\n\r\n    const validateData = () => {\r\n        if (data) {\r\n            setError(null);\r\n            const body = JSON.stringify({\r\n                contentToValidate: new Buffer(JSON.stringify(data)).toString('base64'),\r\n                embeddingMethod: \"BASE64\",\r\n                contentSyntax: 'application/ld+json',\r\n                validationType: SHACL_SHAPE,\r\n                reportSyntax: 'text/turtle'\r\n            });\r\n\r\n            fetch(SHACL_ENDPOINT, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: body\r\n            }).then(result => {\r\n                const decoder = new TextDecoder('utf-8');\r\n                const reader = result.body.getReader();\r\n                reader.read().then(({value, done}) => {\r\n                    setShaclResult(decoder.decode(value));\r\n                });\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        } else {\r\n            setError(\"No data was provided. Please create a snippet in order to validate it.\");\r\n        }\r\n\r\n    }\r\n\r\n    const warningStyle = {\r\n        color: 'red',\r\n    };\r\n\r\n    const saveToLocalStorage = () => {\r\n        if (data) {\r\n            localStorage.setItem('snippet', JSON.stringify(data));\r\n        }\r\n    }\r\n\r\n    const deleteFromLocalStorage = () => {\r\n        localStorage.removeItem('snippet');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container leftaligntext'>\r\n            <h3 className='container centeraligntext'>Creating OSLO compliant data</h3>\r\n\r\n            <br/>\r\n            <Row>\r\n                <Col md={1}><ListAltIcon/></Col>\r\n                <Col md={11}><h4>Step 1 — JSON-LD</h4></Col>\r\n            </Row>\r\n            <Row>\r\n\r\n                <Col md={1}></Col>\r\n                <Col md={11}>\r\n                    <p>Now that you know what a vocabulary, an application profile and implementation model stands for,\r\n                        it is your turn!</p>\r\n                    <p>In this step, you are going to create a JSON-LD data snippet that is compliant with the\r\n                        <a target='_blank' href='../assets/implementatiemodel.PNG'>implementation model</a> shown on the\r\n                        slides.\r\n                        There are 2 possibilities in order to create the data snippet.\r\n                    </p>\r\n                    <p>\r\n                        First, for people who are not familiar with JSON-LD, there is the basic version. For this demo,\r\n                        we recommend to use this possibilty.\r\n                    </p>\r\n                    <p>\r\n                        For people that have some or much experience with JSON-LD, there is the advanced version. We\r\n                        challenge them to use the <a target='_blank' href='https://tinyurl.com/y6mf6xy6'>JSON-LD\r\n                        playground</a>. Once you are done with creating the data snippet in the JSON-LD playground, copy\r\n                        & past it in the textarea below.\r\n                    </p>\r\n                    <h5>Tips & tricks</h5>\r\n                    <p>1. When you choose for the advanced version, the out the <a href='https://data.vlaanderen.be/doc/applicatieprofiel/persoon-basis/#Persoon'>application profile</a> on the website to see which URIs you have to use</p>\r\n                    <p>\r\n                        2. To generate a WKT string, <a target='_blank'\r\n                                                     href='https://clydedacruz.github.io/openstreetmap-wkt-playground/'>this\r\n                        site</a> can help. Click on <button type=\"button\"\r\n                                                            className=\"btn btn-primary\"\r\n                                                            style={{width: '120px'}}> Clear </button>. Then click on\r\n                        <button type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                style={{width: '120px'}}> Point </button> in order to select a point. Then navigate to\r\n                        your birth place on the map and click it. Normally you should see a WKT string in the textarea\r\n                        below the map.\r\n                        When working with the basic version, copy the WKT string and paste it in the WKT field.\r\n                    </p>\r\n                    <h5>Spoiler</h5>\r\n                    <p>\r\n                        The basic version contains already most of the answer. Try not to cheat if you are\r\n                        working with the advanced version.\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col md={1}/>\r\n                <Col md={11}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <CustomSwitch\r\n                                checked={checked}\r\n                                onChange={handleChange}\r\n                                name=\"playgroundSwitch\"\r\n                            />\r\n                        }\r\n                        label={checked ? 'Advanced' : 'Basic'}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col>\r\n                    {checked ? <AdvancedDataEditorComponent onData={handleDataFromChild}/> :\r\n                        <BasicDataEditorComponent onData={handleDataFromChild}/>}\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col md={1}><DoneIcon/></Col>\r\n                <Col md={11}><h4>Step 2 — Validation</h4></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={1}></Col>\r\n                <Col md={11}>\r\n                    <p>Now that you have your data snippet, it is time to validate it.</p>\r\n                    <p>For each OSLO application profile, an additional SHACL file is generated which contains the\r\n                        constraints for the corresponding data model. This enables us to verify if our data is OSLO\r\n                        compliant.</p>\r\n                    <p>It would take a lot of work to do this manually and therefore we have the OSLO Validator. You can\r\n                        visit the validator <a href='https://data.vlaanderen.be/shacl-validator/'>here</a>. The cool\r\n                        thing is that\r\n                        our validator has a REST API, so you can validate your data against the OSLO application\r\n                        profiles in your own application!</p>\r\n                </Col>\r\n            </Row>\r\n            {error && <Row><Col md={1}/><Col md={11}><b style={warningStyle}>{error}</b></Col></Row>}\r\n            <br/>\r\n            <Row>\r\n                <Col md={1}/>\r\n                <Col md={11}>\r\n                    <Button onClick={validateData}>Validate</Button>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            {shaclResult ?\r\n                <Row>\r\n                    <Col md={1}/>\r\n                    <Col md={11}>\r\n                        <TextareaAutosize value={shaclResult} className={classes.root} aria-label=\"textarea\"\r\n                                          rowsMin={10}/>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <br/>\r\n\r\n            }\r\n            <Row>\r\n                <Col md={1}><PublishIcon/></Col>\r\n                <Col md={11}><h4>Step 3 — Temporarily store data in local storage</h4></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={1}/>\r\n                <Col md={11}>\r\n                    <p>In the rest of this tutorial we are going to learn about Solid, your own data vault.</p>\r\n                    <p>Since you don't have your own data vault, we suggest to store your data snippet in local\r\n                        storage, awaiting your Solid Pod</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={1}></Col>\r\n                <Col md={11}>\r\n                    <ButtonGroup aria-label=\"Basic example\">\r\n                        <Button onClick={saveToLocalStorage} variant=\"primary\">Save to local storage</Button>\r\n                        <Button onClick={deleteFromLocalStorage} variant=\"danger\">Delete from local storage</Button>\r\n                    </ButtonGroup>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaygroundComponent;\r\n","import React from 'react';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nconst BasicDataEditorComponent = (props) => {\r\n    const template = require('../util/ApplicationProfileTemplate.json');\r\n\r\n    const [gender, setGender] = React.useState('');\r\n    const [surname, setSurname] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n    const [fullName, setFullName] = React.useState('');\r\n    const [birthDate, setBirthDate] = React.useState('');\r\n    const [birthPlace, setBirthPlace] = React.useState('');\r\n    const [birthCountry, setBirthCountry] = React.useState('');\r\n    const [wkt, setWkt] = React.useState('');\r\n    const [selectedOption, setSelectedOption] = React.useState('');\r\n\r\n    const handleGenderChange = (event) => {\r\n        setSelectedOption(event.target.value);\r\n        let value = '';\r\n        switch (event.target.value) {\r\n            case \"M\":\r\n                value =\r\n                    \"http://publications.europa.eu/resource/authority/human-sex/MALE\";\r\n                break;\r\n            case \"V\":\r\n                value =\r\n                    \"http://publications.europa.eu/resource/authority/human-sex/FEMALE\";\r\n                break;\r\n            case \"X\":\r\n                value =\r\n                    \"http://publications.europa.eu/resource/authority/human-sex/NAP\";\r\n                break;\r\n        }\r\n        setGender(value);\r\n        template[\"geslacht\"][\"@id\"] = \"<span style='background-color: #0066cc;color:white!important;'>\" + value + \"</span>\";\r\n    };\r\n\r\n    const handleSurnameChange = (event) => {\r\n        setSurname(event.target.value);\r\n        template[\"voornaam\"] = \"<span style='background-color: #0066cc;color:white!important;'>\" + event.target.value + \"</span>\";\r\n    };\r\n\r\n    const handleNameChange = (event) => {\r\n        setName(event.target.value);\r\n        template[\"achternaam\"] = \"<span style='background-color: #0066cc;color:white!important;'>\" + event.target.value + \"</span>\"\r\n    };\r\n\r\n    const handleFullNameChange = (event) => {\r\n        setFullName(event.target.value);\r\n        template[\"volledigeNaam\"] = \"<span style='background-color: #0066cc;color:white!important;'>\" + event.target.value + \"</span>\"\r\n    };\r\n\r\n    const handleBirthDateChange = (event) => {\r\n        setBirthDate(event.target.value);\r\n        template[\"heeftGeboorte\"][\"datum\"][\"@value\"] = \"<span style='background-color: #0066cc;color:white!important;'>\" + event.target.value + \"</span>\";\r\n    };\r\n\r\n    const handleBirthPlaceChange = (event) => {\r\n        setBirthPlace(event.target.value);\r\n        template[\"heeftGeboorte\"][\"plaats\"][\"plaatsnaam\"] = \"<span style='background-color: #0066cc;color:white!important;'>\" + event.target.value + \"</span>\"\r\n    };\r\n\r\n    const handleBirthCountryChange = (event) => {\r\n        setBirthCountry(event.target.value);\r\n        template[\"heeftGeboorte\"][\"land\"][\"plaatsnaam\"] = \"<span style='background-color: #0066cc;color:white!important;'>\" + event.target.value + \"</span>\"\r\n    };\r\n\r\n    const handleWktChange = (event) => {\r\n        setWkt(event.target.value);\r\n        template[\"heeftGeboorte\"][\"plaats\"][\"geometrie\"][\"Geometrie.wkt\"] = \"<span style='background-color: #0066cc;color:white!important;'>\" + event.target.value + \"</span>\"\r\n    };\r\n\r\n    const handleFocusLoss = async () => {\r\n        await fillIntemplate();\r\n        props.onData(template);\r\n    }\r\n\r\n    const fillIntemplate = () => {\r\n        template['voornaam'] = surname;\r\n        template['achternaam'] = name;\r\n        template['volledigeNaam'] = fullName;\r\n        template[\"geslacht\"][\"@id\"] = gender;\r\n        template['heeftGeboorte']['datum']['@value'] = birthDate;\r\n        template['heeftGeboorte']['plaats']['plaatsnaam'] = birthPlace;\r\n        template['heeftGeboorte']['land']['plaatsnaam'] = birthCountry;\r\n        template['heeftGeboorte']['plaats']['geometrie']['Geometrie.wkt'] = wkt;\r\n    }\r\n\r\n    const handleChange = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md={1}/>\r\n                <Col md={3}>\r\n                    <form>\r\n                        <div>\r\n                            <TextField onBlur={handleFocusLoss} value={surname} required id=\"surname\" label=\"Voornaam\" onChange={handleSurnameChange}/>\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <TextField onBlur={handleFocusLoss} value={name} required id=\"name\" label=\"Achternaam\" onChange={handleNameChange}/>\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <TextField onBlur={handleFocusLoss} value={fullName} required id=\"full-name\" label=\"Volledige naam\" onChange={handleFullNameChange}/>\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <FormLabel required component=\"legend\">Geslacht</FormLabel>\r\n                            <RadioGroup onBlur={handleFocusLoss} required row aria-label=\"gender\" name=\"gender\" value={selectedOption} onChange={handleGenderChange}>\r\n                                <FormControlLabel value=\"V\" control={<Radio color={\"primary\"}/>} label=\"Vrouw\"/>\r\n                                <FormControlLabel value=\"M\" control={<Radio color={\"primary\"}/>} label=\"Man\"/>\r\n                                <FormControlLabel value=\"X\" control={<Radio color={\"primary\"}/>} label=\"X\"/>\r\n                            </RadioGroup>\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <TextField\r\n                                required\r\n                                onBlur={handleFocusLoss}\r\n                                value={birthDate}\r\n                                id=\"date\"\r\n                                label=\"Geboortedatum\"\r\n                                type=\"date\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onChange={handleBirthDateChange}\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <TextField onBlur={handleFocusLoss} value={birthPlace} required id=\"birthplace\" label=\"Geboorteplaats\" onChange={handleBirthPlaceChange}/>\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <TextField onBlur={handleFocusLoss} value={birthCountry} required id=\"birthCountry\" label=\"Geboorteland\" onChange={handleBirthCountryChange}/>\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <TextField onBlur={handleFocusLoss} value={wkt} required id=\"wkt\" label=\"WKT\" onChange={handleWktChange}/>\r\n                        </div>\r\n                    </form>\r\n                </Col>\r\n                <Col md={8}>\r\n                    <pre dangerouslySetInnerHTML={ { __html: JSON.stringify(template, null, 4) } }></pre>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BasicDataEditorComponent;\r\n","import React, {useState} from 'react'\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyle = makeStyles({\r\n    root: {\r\n        width: '100%'\r\n    }\r\n})\r\n\r\nconst AdvancedDataEditorComponent = (props) => {\r\n    const classes = useStyle();\r\n\r\n    const handleDataChange = (event) => {\r\n        props.onData(event.target.value);\r\n    }\r\n\r\n    return(\r\n        <Row>\r\n            <Col md={1}/>\r\n            <Col md={11}>\r\n                <TextareaAutosize onChange={handleDataChange} className={classes.root} aria-label=\"textarea\" rowsMin={25} placeholder=\"Put your data snippet here\" />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AdvancedDataEditorComponent;\r\n","import { validStatusCodes } from './Util'\r\nimport { delCache } from './Cache';\r\nconst auth = require('solid-auth-client')\r\nconst { default: data } = require('@solid/query-ldflex');\r\nconst DEFAULTSHOWPOPUPS = false;\r\n\r\n// TODO: automatically create directories using solid-file-client\r\n\r\nexport async function getFile(URI, showPopups = DEFAULTSHOWPOPUPS) {\r\n  return doRequest('GET', URI, null, null, showPopups)\r\n}\r\n\r\nexport async function patchFile(URI, body, showPopups = true) {\r\n  data.clearCache(URI);\r\n  delCache(URI);\r\n  return doRequest('PATCH', URI, body, { \"Content-Type\": \"application/sparql-update\" }, showPopups)\r\n}\r\n\r\nexport async function putFile(URI, body, showPopups = DEFAULTSHOWPOPUPS) {\r\n  data.clearCache(URI);\r\n  delCache(URI);\r\n  return doRequest('PUT', URI, body, { \"Content-Type\": \"text/turtle\" }, showPopups)\r\n}\r\n\r\nexport async function postFile(URI, body, showPopups = DEFAULTSHOWPOPUPS) {\r\n  data.clearCache(URI);\r\n  delCache(URI);\r\n  return doRequest('POST', URI, body, { \"Content-Type\": \"text/turtle\" }, showPopups)\r\n}\r\n\r\nexport async function deleteFile(URI, showPopups = DEFAULTSHOWPOPUPS) {\r\n  data.clearCache(URI);\r\n  delCache(URI);\r\n  return doRequest('DELETE', URI, null, null, showPopups)\r\n}\r\n\r\nasync function doRequest(requestType, URI, body, headers, showPopups) {\r\n  const options = {method: requestType}\r\n  if (body) options.body = body\r\n  if (headers) options.headers = headers\r\n  const response = await auth.fetch(URI, options);\r\n  const code = (await response).status\r\n  if (validStatusCodes.indexOf(code) === -1) {\r\n    showErrorPopup(URI, code, requestType, showPopups)\r\n  }\r\n  return response;\r\n}\r\n\r\nfunction showErrorPopup(URI, statusCode, requestType, showPopups) {\r\n  let alert = null\r\n  if ([401, 403].indexOf(statusCode) !== -1) {\r\n    alert =`Incorrect authorization during ${requestType} request to resource on ${URI}. Please double check the permissions set in your solid pod!`\r\n  } else if ([404].indexOf(statusCode) !== -1) {\r\n    alert =`Could not do ${requestType} request to resource at ${URI}, as it has been removed or does not exist.`\r\n  } else {\r\n    alert =`Could not do ${requestType} request to resource at ${URI}. Please double check the permissions set in your solid pod!`\r\n  }\r\n  if (alert && showPopups) window.alert(alert)\r\n  else if (alert) console.error(alert)\r\n}","import React, { useState } from 'react'\r\nimport useNotifications from '../hooks/useNotifications'\r\nimport styles from '../css/components/friendshipview.module.css'\r\n\r\nimport { Button, Row, Col } from 'react-bootstrap'\r\nimport { Value } from '@solid/react';\r\n\r\nimport ns from \"../util/NameSpaces\"\r\n\r\nimport { availableViews } from '../util/Util'\r\nimport { deleteFile } from '../util/FileUtil';\r\n\r\nconst NotificationsViewerComponent = (props) => {\r\n\r\n  const notifications = useNotifications(props.webId)\r\n  const [deleted, setDeleted] = useState([])\r\n  // Sort on notification modified (= created normally) in reverse order to get newest first\r\n  const nondeletedNotifications = notifications.filter(n => deleted.indexOf(n.metadata.id) === -1)\r\n  const sortednotifications = nondeletedNotifications.sort( (a, b) => new Date(b.metadata.modified) - new Date(a.metadata.modified));\r\n\r\n  async function deleteNotification(notificationId) {\r\n    deleteFile(notificationId);\r\n    setDeleted(deleted.concat(notificationId));\r\n  }\r\n\r\n  return (\r\n    <div id=\"notificationsviewercomponent\" className='container'>\r\n      <h4> Notifications </h4>\r\n      <br />\r\n      <Row className='propertyview pageheader' key={'header'}>\r\n        <Col md={1}><label className=\"leftaligntext\"><b>Type</b></label></Col>\r\n        <Col md={2}><label className=\"leftaligntext\">Sender</label></Col>\r\n        <Col md={2}><label className=\"leftaligntext\">Time received</label></Col>\r\n        <Col md={4}><label className=\"leftaligntext\">Summary</label></Col>\r\n        <Col md={2}><label className=\"centeraligntext\">Action</label></Col>\r\n      </Row>\r\n      {sortednotifications.map(notification => {\r\n        return ( <NotificationCard notification={notification} {...props} key={notification.metadata.id} deleteNotification={deleteNotification}/> )\r\n      })}\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default NotificationsViewerComponent\r\n\r\nconst NotificationCard = (props) => {\r\n  const notification = props.notification;\r\n  // TODO;; this will fail if you have no view access to the contract\r\n  function getButton() {\r\n    switch (notification.type) {\r\n      case ns.as('Accept'):\r\n        return (<Button className={'centeraligntext'} onClick={() => viewrequest(notification.target)}>See progress</Button>)\r\n      case ns.as('Reject'):\r\n        return (<Button className={'centeraligntext'} onClick={() => viewrequest(notification.target)}>See progress</Button>)\r\n      case ns.as('Offer'):\r\n        return (<Button className={'centeraligntext'} onClick={() => viewrequest(notification.target)}>See offer</Button>)\r\n      case ns.as('Announce'):\r\n        // Filter announcement when friendship is official\r\n        return (<Button className={'centeraligntext'} onClick={() => viewfriends()}>View</Button>)\r\n      default:\r\n        return (<div />)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`NotificationCard`}>\r\n      <Row className='propertyview' key={notification.metadata.id}>\r\n        <Col md={1}><label className='leftaligntext'>{notification.type && notification.type.split('#')[1]}</label></Col>\r\n        <Col md={2}><label className='leftaligntext'><a href={notification.actor}><Value src={`[${notification.actor}].name`}/></a></label></Col>\r\n        <Col md={2}><label className='leftaligntext'>{notification.metadata.modified && notification.metadata.modified.toLocaleString()}</label></Col>\r\n        <Col md={4}><label className='leftaligntext'>{notification.summary}</label></Col>\r\n        <Col md={2}>{getButton()}</Col>\r\n        <Col md={1}><Button className={`${styles.delete} centeraligntext`} onClick={() => props.deleteNotification(notification.metadata.id)}>X</Button></Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n\r\n  async function viewrequest(marriageId) {\r\n    // const contract = await getContractData(marriageId)\r\n    const view = availableViews.friendshipview\r\n    view.args = {contractId: marriageId}\r\n    props.setview(view)\r\n  }\r\n\r\n  async function viewfriends(){\r\n    props.setview(availableViews.friendoverview);\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, Row, Col } from 'react-bootstrap'\r\nimport { Value } from '@solid/react';\r\n\r\nimport ns from \"../util/NameSpaces\"\r\nimport useContracts from '../hooks/useContracts'\r\nimport { availableViews, formatDate } from '../util/Util'\r\n\r\nconst InProgressViewerComponent = (props) => {\r\n\r\n  const userContracts = useContracts(props.webId) || []\r\n  const contracts = userContracts.filter(e => !e.status || e.status === ns.demo('proposal') || e.status === ns.demo('submitted') || e.status === ns.demo('rejected'))\r\n\r\n  const viewMarriage = function(contract){\r\n    const view = availableViews.friendshipview;\r\n    view.args = {contractId: contract.id}\r\n    props.setview(view)\r\n  }\r\n\r\n  const getContractStatus = (status) => {\r\n    if(!status) return('pending')\r\n    const split = status.split('/')\r\n    return split[split.length - 1]\r\n  }\r\n\r\n  const getContractDate = (date) => {\r\n    if (!date) {\r\n      return \"no date set\"\r\n    } else {\r\n      return new Date(date).toLocaleString()\r\n    }\r\n  }\r\n\r\n  const sortedContracts = contracts.sort( (a, b) => { if(!b) { return a } else if (!a) { return b } else { return new Date(a.created) - new Date(b.created) }})\r\n  return (\r\n    <div id=\"InProgressViewerComponent\" className='container'>\r\n      <h4>Running Friend Requests</h4>\r\n      <br />\r\n      <Row className='propertyview pageheader' key={'header'}>\r\n        <Col md={3}><label className=\"leftaligntext\"><b>Contract type</b></label></Col>\r\n        <Col md={2}><label className=\"leftaligntext\">Current status</label></Col>\r\n        <Col md={2}><label className=\"leftaligntext\">Created at</label></Col>\r\n        <Col md={3}><label className=\"leftaligntext\">Creator</label></Col>\r\n        <Col md={2}><label className=\"centeraligntext\">Action</label></Col>\r\n      </Row>\r\n      {sortedContracts.map(contract => {\r\n        return (\r\n          <Row className='propertyview ' key={contract.id}>\r\n            <Col md={3}><label className=\"leftaligntext\"><b>friend request</b></label></Col>\r\n            <Col md={2}><label className=\"leftaligntext\">{getContractStatus(contract.status)}</label></Col>\r\n            <Col md={2}><label className=\"leftaligntext\">{getContractDate(contract.created)}</label></Col>\r\n            <Col md={3}><label className=\"leftaligntext\"><a href={contract.creator}><Value src={`[${contract.creator}].name`}/></a></label></Col>\r\n            <Col md={2}><Button onClick={() => viewMarriage(contract)} className='centeraligntext'>see progress</Button></Col>\r\n          </Row>\r\n        )\r\n      })}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InProgressViewerComponent\r\n","import { useState, useEffect } from 'react';\r\nimport { getPromiseValueOrUndefined, getProfileData } from '../util/Util'\r\n\r\nimport ns from \"../util/NameSpaces\"\r\n\r\nconst { default: data } = require('@solid/query-ldflex');\r\n\r\nconst useProfile = function(webId) {\r\n  const [profile, setProfile] = useState(null);\r\n  useEffect(() => {\r\n    let mounted = true\r\n    getProfileData(webId, false).then(profile => {\r\n      if(profile) profile.webId = webId\r\n      if(mounted) setProfile(profile)\r\n    }).catch(\r\n      setProfile(null)\r\n    )\r\n    return () => {\r\n      mounted = false\r\n    }\r\n  }, [webId])  \r\n  return profile\r\n}\r\n\r\n// export async function getProfile(webId) {\r\n//   webId = await webId;\r\n//   if(!webId) return null\r\n//   data.clearCache() // data.clearCache(webId)\r\n//   let profiledata = data[webId];\r\n  \r\n//   const name = await getPromiseValueOrUndefined(profiledata[ns.foaf('name')]);\r\n//   const bdate = await getPromiseValueOrUndefined(profiledata[ns.dbo('birthDate')]);\r\n//   const location = await getPromiseValueOrUndefined(profiledata[ns.dbo('location')]);\r\n//   // const cstatus = await getPromiseValueOrUndefined(profiledata[ns.demo('civilstatus')]);\r\n  \r\n//   return { name, bdate, location } // , cstatus }\r\n// }\r\n\r\nexport default useProfile","import React from 'react'\r\nimport ReactLoading from 'react-loading';\r\nimport '../css/VCardComponent.css'\r\n\r\nimport { Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport useProfile from '../hooks/useProfile'\r\nimport { availableViews, formatDate } from '../util/Util';\r\n\r\nconst UNKNOWNVALUE = 'Value not set'\r\n\r\nconst ProfileViewerComponent = (props) => {\r\n  const profile = useProfile(props.webId)\r\n\r\n  if (! profile){\r\n    return (\r\n      <div id=\"profileviewercomponent\" className='container'>\r\n        <h4> Profile </h4>\r\n        <br />\r\n        <ReactLoading type={\"cubes\"}/>\r\n      </div>\r\n    )\r\n  } \r\n\r\n  return (\r\n    <div id=\"profileviewercomponent\" className='container'>\r\n      <h4> Profile </h4>\r\n      <br />\r\n      {Object.keys(profileProps).map(property => {\r\n        const value = profile[property] && (property === 'bdate' ? formatDate(profile[property]) : profile[property])\r\n        return (\r\n          <Row className='propertyview ' key={property}>\r\n            <Col md={3}><label className=\"leftaligntext\"><b>{profileProps[property]}</b></label></Col>\r\n            <Col md={9}><label className=\"leftaligntext\">{value || UNKNOWNVALUE}</label></Col>\r\n          </Row>  \r\n        )\r\n      })}\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col md={2}><Button onClick={() => {navigator.clipboard.writeText(props.webId)}}>copy webId</Button></Col>\r\n        <Col md={3}></Col>\r\n        <Col md={2}><Button onClick={() => props.setview(availableViews.profileeditor)}>Edit</Button></Col>\r\n      </Row>\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nconst profileProps = {\r\n  name: \"Name\",\r\n  bdate: \"BirthDate\",\r\n  location: \"Country\",\r\n  // cstatus: \"Civil Status\",\r\n}\r\n\r\nexport default ProfileViewerComponent\r\n","import React, {useEffect} from 'react'\r\nimport ReactLoading from 'react-loading';\r\nimport '../css/VCardComponent.css'\r\n\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { patchFile } from '../util/FileUtil'\r\nimport { createDeleteInsertProfileDataQuery } from '../util/QueryUtil'\r\nimport { Select, MenuItem } from '@material-ui/core'\r\nimport { Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport useProfile from '../hooks/useProfile'\r\nimport { availableViews } from '../util/Util';\r\n\r\n\r\nconst ProfileEditorComponent = (props) => {\r\n\r\n  const profile = useProfile(props.webId)\r\n\r\n  const { register, handleSubmit, control, reset } = useForm({ defaultValues: {} })\r\n\r\n  const onSubmit = async newprofile => {\r\n    patchFile(props.webId, await createDeleteInsertProfileDataQuery(props.webId, profile, newprofile))\r\n    props.setview(availableViews.profile)\r\n  }\r\n\r\n  useEffect(() => {\r\n    reset(profile)\r\n  }, [profile])\r\n\r\n  if (! profile){\r\n    return (\r\n      <div id=\"ProfileEditorComponent\" className='container'>\r\n        <h4> Profile </h4>\r\n        <br />\r\n        <ReactLoading type={\"cubes\"}/>\r\n      </div>\r\n    )\r\n  } \r\n\r\n  const properties = [{\r\n    label: 'Name',\r\n    name: 'name',\r\n    type: 'text',\r\n  }, {\r\n    label: 'BirthDate',\r\n    name: 'bdate',\r\n    type: 'date',\r\n  }, {\r\n    label: 'Country',\r\n    name: 'location',\r\n    type: 'text',\r\n  // }, {\r\n  //   label: 'Civil Status',\r\n  //   name: 'cstatus',\r\n  //   controller: <Controller as={\r\n  //       <Select>\r\n  //         <MenuItem value={\"Single\"}>Single</MenuItem>\r\n  //         <MenuItem value={\"Cohabiting\"}>Cohabiting</MenuItem>\r\n  //         <MenuItem value={\"Married\"}>Married</MenuItem>\r\n  //         <MenuItem value={\"Divorced\"}>Divorced</MenuItem>\r\n  //         <MenuItem value={\"Widowed\"}>Widowed</MenuItem>\r\n  //       </Select>\r\n  //     }\r\n  //     control={control}\r\n  //     name=\"cstatus\"\r\n  //     defaultValue={\"Single\"}\r\n  //   />\r\n  }]\r\n\r\n  return (\r\n    <div id=\"ProfileEditorComponent\" className='container'>\r\n      <h4> Profile </h4>\r\n      <br />\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {properties.map(prop => {\r\n          return(\r\n            <Row className='propertyview ' key={prop.name}>\r\n              <Col md={3}><label className=\"leftaligntext\"><b>{prop.label}</b></label></Col>\r\n              {prop.controller\r\n              ? <Col md={1}>{prop.controller}</Col>\r\n              : <Col md={9}><input type={prop.type || 'text'} className='leftaligntext inputfield' name={prop.name} ref={register({ required: true })} /></Col> \r\n              }\r\n            </Row>  \r\n          )\r\n        })}\r\n        <br/>\r\n        <br/>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileEditorComponent\r\n\r\n// <h2>All friends</h2>\r\n// <List src=\"[https://ruben.verborgh.org/profile/#me].friends.firstName\"/>\r\n\r\n// @prefix dbo: <http://dbpedia.org/ontology/>. dbo:birthDate, dbo:birthPlace","import React from 'react'\r\nimport {Row, Col, Button, Badge} from 'react-bootstrap'\r\nimport {availableViews} from '../util/Util';\r\nimport {IconButton} from '@material-ui/core';\r\n\r\nconst HelpComponent = (props) => {\r\n    return (\r\n        <div id=\"HelpComponent\" className='container leftaligntext'>\r\n            <h4 className='container centeraligntext'>How to get friends with SOLID in a few clicks</h4>\r\n\r\n            <Row>\r\n                <Col md={1}>{availableViews.login.icon}</Col>\r\n                <Col md={11}><h4>Preliminaries</h4></Col>\r\n            </Row>\r\n            <Row>\r\n\r\n                <Col md={1}></Col>\r\n                <Col md={11}>\r\n                    <p>Before starting this demonstration for SOLID, you are expected to create a SOLID pod.</p>\r\n                    <p>In case you do not do not yet have a SOLID pod available, you can create a pod on <a\r\n                        href={'https://inrupt.net/'}>solid community</a>.</p>\r\n                    <p>(or using login button - choose provider - register account. But this should be explained with\r\n                        pictures)</p>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n\r\n            <Row>\r\n                <Col md={1}>{availableViews.profile.icon}</Col>\r\n                <Col md={11}><h4>Step 1 - Complete user profile</h4></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={1}></Col>\r\n                <Col md={11}>\r\n                    <p>The first step of this demonstration is to fill out your profile information.</p>\r\n                    <p>This ensures that subsequent steps in the demonstration can retrieve some information from your\r\n                        pod to show in the forms.</p>\r\n                    <p>You can find (some of) your profile information in the profile tab on the left.</p>\r\n                    <p>In this tab, you can edit your profile information by clicking the <Button>Edit</Button> button.\r\n                    </p>\r\n                    <p>In the edit screen, you can fill in your profile information in the fields, and submit the using\r\n                        the <Button type=\"submit\">Submit</Button> button.</p>\r\n                    <p>All fields are mandatory!</p>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n\r\n            <Row>\r\n                <Col md={1}>{availableViews.upload.icon}</Col>\r\n                <Col md={11}><h4>Step 2 - Upload your data snippet</h4></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={1}/>\r\n                <Col md={11}>\r\n                    <p>Upload your data snippet that you created earlier this tutorial.</p>\r\n                    <p>When you forgot to store your snippet at local storage, the application will show an error and you will have to create the snippet again</p>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n\r\n            <Row>\r\n                <Col md={1}>{availableViews.friendrequest.icon}</Col>\r\n                <Col md={11}><h4>Step 3 - Sending a friend request</h4></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={1}></Col>\r\n                <Col md={11}>\r\n                    <p>Now that your profile information is completed, you can send out friend request</p>\r\n                    <p>To send a friend request, go to the <b>Friend request</b> tab</p>\r\n                    <p>You will see a form, where your information is already filled out, as one of the 2 persons\r\n                        engaging this friendship</p>\r\n                    <p>Since a friendship requires 2 persons, you will have to find another person's webId to enter</p>\r\n                    <p>If a valid webId is entered, the associated profile will be shown automatically</p>\r\n                    <p>In case this profile is incomplete, an error message will be shown. Please choose a different\r\n                        webId, or wait for the person to complete their profile.</p>\r\n                    <p>If all necessary information is filled in, the request is ready to be submitted.</p>\r\n                    <p>You can use the default storage location to store the created friend request on your pod, or\r\n                        select a custom location (please make sure the selected location is valid, and read permissions\r\n                        are public. If this is not the case, the people you invite will not be able to see the friend request).</p>\r\n                    <p>Now, you can submit the friend request using <Button>Submit</Button></p>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n\r\n            <Row>\r\n                <Col md={1}>{availableViews.running.icon}</Col>\r\n                <Col md={11}><h4>Step 4 - Accepting requests</h4></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={1}></Col>\r\n                <Col md={11}>\r\n                    <p>On creation of a friend request, all parties (including yourself) are notified of the created\r\n                        friend request.</p>\r\n                    <p>These notifications can be found by clicking the notification icon\r\n                        <IconButton aria-label={'notifications'} color=\"inherit\">\r\n                            <Badge color=\"secondary\">\r\n                                {availableViews.notifications.icon}\r\n                            </Badge>\r\n                        </IconButton>\r\n                        at the top of your screen.</p>\r\n                    <p>Now, you can see the friend request, and the other person involved in the friend request.</p>\r\n                    <p>In this form, you will see two action buttons next to your name: <button type=\"button\"\r\n                                                                                                className=\"marriageview_accept__3V0c_ centeraligntext btn btn-primary\"\r\n                                                                                                style={{width: '120px'}}> Accept </button> and <button\r\n                        type=\"button\" className=\"marriageview_refuse__2lqar centeraligntext btn btn-primary\"\r\n                        style={{width: '120px'}}> Refuse </button>.\r\n                    </p>\r\n                    <p>With these, you can accept or refuse the request.</p>\r\n                    <p>For the creator of a friend request, a button is available to resend an invitation. This will\r\n                        trigger another notification to be sent to the person.</p>\r\n                    <p>When everyone has accepted the request, a button <button type=\"button\"\r\n                                                                                className=\"marriageview_accept__3V0c_ valuebutton btn btn-primary\"\r\n                                                                                style={{width: '220px'}}> Officiate\r\n                        Friend Request </button> is available for the creator of the friend request to make the new\r\n                        friendship official (status of the friend request will be updated to 'official')\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n\r\n            <Row>\r\n                <Col md={1}>{availableViews.friendoverview.icon}</Col>\r\n                <Col md={11}><h4>Step 5 - Viewing your friend request</h4></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={1}></Col>\r\n                <Col md={11}>\r\n                    <p>When the friendship is offical, you can view the information of your new friend and also the\r\n                        friend request in this tab</p>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n\r\n            <Row>\r\n                <Col md={1}>{availableViews.map.icon}</Col>\r\n                <Col md={11}><h4>Step 6 - Your friends on a map</h4></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={1}></Col>\r\n                <Col md={11}>\r\n                    <p>When a friend request is accepted, the snippet that was made with the playground will be read</p>\r\n                    <p>The location the person provided as his birth place, will be used to show a marker on the map</p>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HelpComponent\r\n","import React from 'react';\r\nimport '../css/LoginComponent.css';\r\n\r\nimport {LoginButton} from '@solid/react';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n\r\nimport background from '../assets/solid_background.jpg'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nfunction LoginComponent() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"center\">\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={background}\r\n                        title=\"Building an encyclopedia that is understandable for machines\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Solid\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Log in met je Solid Pod. Indien je nog geen Pod heb kan je <a href=\"https://inrupt.net/\">hier</a> eentje aanmaken\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <LoginButton className=\"loginButton\"\r\n                                 popup=\"https://solid.inrupt.net/common/popup.html\">Login</LoginButton>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginComponent;\r\n","import React from 'react'\r\nimport useProfile from '../hooks/useProfile'\r\nimport styles from '../css/components/profilecard.module.css'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { formatDate } from '../util/Util';\r\n\r\nconst ProfileCardComponent = (props) => {\r\n\r\n  const profile = useProfile(props.webId)\r\n  if(!profile || !profile.name) return(<div />);\r\n  return (\r\n    <div id=\"ProfileCardComponent\" className={styles.container}>\r\n      {profile && Object.keys(profileProps).map(property => {\r\n        const value = profile[property] && (property === 'bdate' ? formatDate(profile[property]) : profile[property])\r\n        return (\r\n          <Row className={`propertyview ${styles.profilecardrow}`} key={property}>\r\n            <Col sm={12} md={4}><label className=\"leftaligntext\"><b>{profileProps[property]}</b></label></Col>\r\n            <Col sm={12} md={8}>\r\n              <label className=\"leftaligntext\">\r\n                {property === 'name' ? <a href={props.webId}>{value}</a> : <div>{value}</div>}\r\n              </label>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst profileProps = {\r\n  name: \"Name\",\r\n  bdate: \"BirthDate\",\r\n  location: \"Country\",\r\n  // cstatus: \"Civil Status\",\r\n}\r\n\r\nexport default ProfileCardComponent\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport useProfile from '../hooks/useProfile'\r\nimport ProfileCardComponent from './ProfileCardComponent';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst ProfileCardSelectorComponent = (props) => {\r\n  const [webIdInput, setWebIdInput] = useState(props.person.webId)\r\n\r\n  const profile = useProfile(webIdInput)\r\n\r\n  const webIdChangeHandler = (event) => {\r\n    setWebIdInput(event.target.value)\r\n    props.setvalue(event.target.value);\r\n  }\r\n  // useEffect(() => {\r\n  //   if (profile && isProfile(profile)) props.setvalue(profile.webId);\r\n  // }, [profile])\r\n\r\n  const isComplete = (profile) => profile.name && profile.bdate && profile.location //&& profile.cstatus\r\n  const isProfile = (profile) => profile.name\r\n\r\n  const warningStyle = {\r\n    color: 'red',\r\n  };\r\n\r\n  function getWarnings(profile) {\r\n    if(!profile || !isProfile(profile)) return webIdInput ? \"Please enter a valid webId\" : undefined\r\n    if (!isComplete(profile))\r\n      return \"The chosen profile is not complete. Please choose a webId with a completed profile, or wait for the profile to be completed by the owner.\"\r\n  }\r\n\r\n  const warnings = getWarnings(profile)\r\n\r\n  return (\r\n    <div id=\"ProfileCardSelectorComponent\">\r\n    {props.index < 2\r\n      ? <Row className='propertyview ' key={\"profileselect\" + props.index}>\r\n          <Col md={3}><label className=\"leftaligntext\"><b>{props.person.label}</b></label></Col>\r\n          <Col md={9}><Input className=\"leftaligntext\" value={webIdInput || \"\"} name=\"location\" onChange={webIdChangeHandler}/></Col>\r\n        </Row>\r\n      : <Row className='propertyview ' key={\"profileselect\" + props.index}>\r\n          <Col md={3}><label className=\"leftaligntext\"><b>{props.person.label}</b></label></Col>\r\n          <Col md={8}><Input className=\"leftaligntext\" value={webIdInput || \"\"} name=\"location\" onChange={webIdChangeHandler}/></Col>\r\n          <Col md={1}><ClearIcon onClick={() => props.delete(props.index)} /></Col>\r\n        </Row>\r\n      }\r\n      {warnings && <b style={warningStyle}>{warnings}</b>}\r\n      <Row className='propertyview ' key={\"profileview\" + props.index}>\r\n        <Col md={3}></Col>\r\n        <Col md={8}><ProfileCardComponent webId={webIdInput} key={webIdInput}></ProfileCardComponent></Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileCardSelectorComponent\r\n","import React, {useState, useEffect} from 'react'\r\nimport '../css/VCardComponent.css'\r\n\r\n// import { useForm, Controller } from 'react-hook-form'\r\nimport { Button, Row, Col } from 'react-bootstrap'\r\nimport ProfileCardSelectorComponent from './ProfileCardSelectorComponent'\r\nimport { createMarriagePropsalNotification } from '../util/QueryUtil'\r\nimport { Input } from '@material-ui/core'\r\nimport { parseURL } from 'url-toolkit';\r\nimport { getProfile } from '../hooks/useProfile'\r\nimport { availableViews, getProfileData } from '../util/Util'\r\nimport {createFriendRequest} from \"../util/FriendsController\";\r\n\r\nconst FriendRequestComponent = (props) => {\r\n\r\n    const parsedURI = parseURL(props.webId)\r\n    const [storageLocation, setStorageLocation] = useState(parsedURI.scheme + parsedURI.netLoc + '/public/')\r\n    const [state, setState] = useState([\r\n        {\r\n            label: \"Person\",\r\n            type: \"person\",\r\n            webId: props.webId,\r\n        },\r\n        {\r\n            label: \"Person\",\r\n            type: \"person\",\r\n            webId: \"\",\r\n        }\r\n    ])\r\n\r\n    const handleSubmit = async event => {\r\n        if (!await validateSubmission(state)) return;\r\n        const proposal = await createFriendRequest(state, storageLocation, props.webId)\r\n        props.setview(availableViews.running)\r\n    }\r\n\r\n    const setvalue = (index, value) => {\r\n        const stateCopy = state.slice()\r\n        stateCopy[index].webId = value\r\n        setState(stateCopy)\r\n    }\r\n\r\n    const validateSubmission = async () => {\r\n\r\n        if (state.filter(person => person.type === 'person').length <= 1){\r\n            window.alert('Please provide the webId of the person you want to be friends with.')\r\n            return false;\r\n        }\r\n\r\n        for (let person of state){\r\n            if (!person.webId) {\r\n                window.alert(person.label + ' field does not have a valid webId');\r\n                return false\r\n            }\r\n\r\n            const profile = await getProfileData(person.webId)\r\n            if (!profile || !profile.name) {\r\n                window.alert(person.webId + ' is not a valid webId');\r\n                return false\r\n            } else if (!profile.bdate || !profile.location) {\r\n                window.alert(person.webId + ' does not have a valid profile');\r\n                return false\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const updateStorageLocation = (e) => {\r\n        setStorageLocation(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div id='FriendRequestComponent' className='container'>\r\n            <h4>Construct Friend Request</h4>\r\n            <br />\r\n            <Row className='propertyview pageheader' key={'header'}>\r\n                <Col md={3}><label className=\"leftaligntext\"><b>Function</b></label></Col>\r\n                <Col md={9}><label className=\"leftaligntext\">Person webId</label></Col>\r\n            </Row>\r\n            <form>\r\n                {state.map((person, index) => {\r\n                    return ( <ProfileCardSelectorComponent setvalue={(value) => setvalue(index, value)} person={person} key={'cardselector' + index} index={index} /> )\r\n                })}\r\n                <br/>\r\n                <br/>\r\n                <Row className='propertyview'>\r\n                    <Col md={3}><label className='leftaligntext'>{\"Storage Location\"}</label></Col>\r\n                    <Col md={9}><Input className='storageLocation leftaligntext' value={storageLocation} onChange={updateStorageLocation}/></Col>\r\n                </Row>\r\n                <Button onClick={() => handleSubmit()}>Submit</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendRequestComponent;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col } from 'react-bootstrap'\r\nimport styles from '../css/components/friendshipview.module.css'\r\n\r\nimport ns from \"../util/NameSpaces\"\r\nimport ProfileCardComponent from './ProfileCardComponent'\r\nimport {\r\n  acceptRequest,\r\n  refuseRequest,\r\n  deleteRequest,\r\n  sendContactInvitation,\r\n  officiateRequest\r\n} from '../util/FriendsController'\r\nimport { availableViews, getContractData } from '../util/Util';\r\nconst { default: data } = require('@solid/query-ldflex');\r\n\r\nconst INVITATIONACCEPTED = ns.demo('accepted')\r\nconst INVITATIONREFUSED = ns.demo('refused')\r\n\r\nconst TIMEOUT = 10 * 1000;\r\n\r\n// TODO:: remove marriage button only for creator\r\n// TODO:: If spouse if 2 times the same person it will only show once (same for witnesses) because of ldflex => update this to use N3 in usecontracts?\r\n\r\n/**\r\n *\r\n * @param {spouse: {id: string}[], witness: {id: string}[]} props.contacts\r\n */\r\nconst FriendshipViewComponent = (props) => {\r\n\r\n  const [contract, setcontract] = useState(undefined);\r\n  let allcontacts = [];\r\n  if (contract){\r\n    allcontacts =  contract.person.map(e => { e.type='person'; return e})\r\n    allcontacts = allcontacts.map(e => { e['status'] = e['status'] || 'loading' ; return e})\r\n  }\r\n  const [contacts, setContacts] = useState(allcontacts)\r\n\r\n  // Load in contract data\r\n  useEffect(() => {\r\n    let mounted = true\r\n    getContractData(props.contractId).then(contract => {\r\n      if (mounted) setcontract(contract || null)\r\n    })\r\n    return () => mounted = false;\r\n  }, [props.contractId])\r\n\r\n  // Set contacts status\r\n  useEffect(() => {\r\n    if (!contract) return;\r\n    let mounted = true\r\n    async function refreshContacts() {\r\n      updateContacts(allcontacts).then(updatedContacts => {\r\n        if(mounted) setContacts(updatedContacts)\r\n      })\r\n    }\r\n    refreshContacts()\r\n    const interval = setInterval(() => {\r\n      refreshContacts()\r\n    }, TIMEOUT);\r\n    return () => {\r\n      mounted = false;\r\n      clearInterval(interval);\r\n    }\r\n  }, [contract])\r\n\r\n  async function getContactStatus(contactWebId){\r\n    let accepted, refused;\r\n    data.clearCache() // data.clearCache(contactWebId)\r\n    for await (const acceptedEvent of data[contactWebId][INVITATIONACCEPTED]){\r\n      if (`${await acceptedEvent}` === props.contractId) accepted = true;\r\n    }\r\n    for await (const refusedEvent of data[contactWebId][INVITATIONREFUSED]){\r\n      if (`${await refusedEvent}` === props.contractId) refused = true;\r\n    }\r\n    return accepted ? 'accepted' : (refused ? 'refused' : 'pending')\r\n  }\r\n\r\n  async function updateContacts(contactsToUpdate) {\r\n    const contacts = []\r\n    for (let contact of contactsToUpdate){\r\n      contact['status'] = await getContactStatus(contact.id)\r\n      contacts.push(contact)\r\n    }\r\n    return contacts\r\n  }\r\n\r\n  async function officiateFriendship(){\r\n    const submission = officiateRequest(props.webId, props.contractId, contacts);\r\n    props.setview(availableViews.running)\r\n  }\r\n\r\n  async function deleteFriendRequest(){\r\n    const deletion = await deleteRequest(props.contractId, props.webId)\r\n    props.setview(availableViews.running)\r\n  }\r\n\r\n  function isComplete() {\r\n    for (let contact of contacts) {\r\n      if (contact.status !== \"accepted\") return false\r\n    }\r\n    if (contract.status === ns.demo('rejected')) return false\r\n    return true\r\n  }\r\n\r\n  function setContactStatus(contactId, newstatus){\r\n    let updatedContacts = contacts.slice()\r\n    for (let contact of updatedContacts) {\r\n      if (contact.id === contactId) {\r\n        contact.status = newstatus;\r\n      }\r\n    }\r\n    setContacts(updatedContacts)\r\n  }\r\n\r\n  async function accept(contactId, contractId) {\r\n    const response = await acceptRequest(props.webId, props.contractId, contract.creator)\r\n    setContactStatus(contactId, 'accepted')\r\n  }\r\n\r\n  async function refuse(contactId, contractId) {\r\n    await refuseRequest(props.webId, props.contractId, contract.creator)\r\n    setContactStatus(contactId, 'refused')\r\n  }\r\n\r\n  async function resend(contactId, proposalId) {\r\n    const response = await sendContactInvitation(props.webId, contactId, proposalId)\r\n  }\r\n\r\n  function getContactButton(contact){\r\n    if(contact.status === 'pending') {\r\n      // If me\r\n      if (contact.id === props.webId) return (\r\n          <div>\r\n            <Button className={`${styles.accept} centeraligntext`} onClick={() => accept(contact.id, props.contractId)}> Accept </Button>\r\n            <Button className={`${styles.refuse} centeraligntext`} onClick={() => refuse(contact.id, props.contractId)}> Refuse </Button>\r\n          </div>\r\n        )\r\n      else {\r\n        return (\r\n            <ResendButton resend={resend} contactId={contact.id} contractId={props.contractId}/>\r\n        )\r\n      }\r\n    }\r\n    return(<div />)\r\n  }\r\n\r\n  function showContactStatus(contact){\r\n    switch (contact.status) {\r\n      case 'accepted':\r\n        return \"Accepted\"\r\n      case 'refused':\r\n        return \"Refused\"\r\n      case 'loading':\r\n        return \"Loading\"\r\n      case 'pending':\r\n        return \"Pending\"\r\n    }\r\n    return \"Loading\"\r\n  }\r\n\r\n\r\n  if (contract === undefined) {\r\n    return (\r\n      <div className='container'>\r\n        <h4> Friend Request </h4>\r\n        <br />\r\n        <h6>Loading Friend Request.</h6>\r\n      </div>\r\n    )\r\n  } else if (!contract) {\r\n    return (\r\n      <div className='container'>\r\n        <h4> Friend Request </h4>\r\n        <br />\r\n        <h6>The requested friend request could not be retrieved. The resource has been removed or does not exist.</h6>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className='container'>\r\n      <h4> Friend Request </h4>\r\n      <br />\r\n      <Row className='propertyview pageheader' key={'header'}>\r\n        <Col md={2}><label className=\"leftaligntext\"><b>Function</b></label></Col>\r\n        <Col md={5}><label className=\"leftaligntext\">Person webId</label></Col>\r\n        <Col md={2}><label className=\"centeraligntext\">Status</label></Col>\r\n        <Col md={2}><label className=\"centeraligntext\">Action</label></Col>\r\n      </Row>\r\n      {contacts.map((contact, index) => {\r\n        return (\r\n          <Row className='propertyview' key={contact.id + '-' + index}>\r\n            <Col md={2}><label className=\"leftaligntext\"><b>{contact.type}</b></label></Col>\r\n            <Col md={5}><ProfileCardComponent webId={contact.id} key={contact.id} /></Col>\r\n            <Col md={2}>{showContactStatus(contact)}</Col>\r\n            <Col md={2}>{getContactButton(contact)}</Col>\r\n          </Row>\r\n        )})}\r\n        <br />\r\n        <br />\r\n        <br />\r\n        { contract.creator === props.webId && contract.status !== ns.demo('official')\r\n          ? isComplete()\r\n            ? <Row>\r\n                <Col md={6} />\r\n                <Col md={3}>\r\n                  <Button className={`${styles.accept} valuebutton`} onClick={() => officiateFriendship(props.contractId, props.webId)}> Officiate Friend Request </Button>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Button className={`${styles.delete} valuebutton`} onClick={() => deleteFriendRequest(props.contractId, props.webId)}> Delete Friend Request </Button>\r\n                </Col>\r\n              </Row>\r\n            : <Row>\r\n                <Col md={9} />\r\n                <Col md={3}>\r\n                  <Button className={`${styles.delete} valuebutton`} onClick={() => deleteFriendRequest(props.contractId, props.webId)}> Delete Friend Request </Button>\r\n                </Col>\r\n              </Row>\r\n          : <Row />\r\n        }\r\n    </div>\r\n  )\r\n}\r\nexport default FriendshipViewComponent;\r\n\r\nconst ResendButton = (props) => {\r\n  const [state, setstate] = useState(false)\r\n  if (state) return (<Button className={`${styles.pending} centeraligntext`} disabled>Reminder sent</Button>)\r\n  return (<Button className={`${styles.pending} centeraligntext`} onClick={() => { props.resend(props.contactId, props.contractId).then(setstate(true)) }} >Resend notification</Button>)\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {MapContainer, Marker, Popup, TileLayer, useMapEvents} from \"react-leaflet\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {getFriendLocations, getFriends, getFriendSnippetData} from \"../util/FriendsController\";\r\nimport useContracts from \"../hooks/useContracts\";\r\nimport ProfileCardComponent from \"./ProfileCardComponent\";\r\n\r\nconst useStyle = makeStyles({\r\n    map: {\r\n        height: '500px'\r\n    }\r\n})\r\n\r\nconst MapComponent = (props) => {\r\n    const position = [50.5010789, 4.4764595];\r\n    const classes = useStyle();\r\n\r\n    const userContracts = useContracts(props.webId)\r\n    const friends = getFriends(userContracts, props.webId);\r\n\r\n    const [locationObjects, setLocationObjects] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        getFriendLocations(friends).then(locations => {\r\n            if (locations.length && mounted) setLocationObjects(locations)\r\n        });\r\n        return () => mounted = false;\r\n    }, [userContracts])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h3 className='container'>Map overview of your friends</h3>\r\n            <br/>\r\n            <MapContainer className={classes.map} center={position} zoom={8} scrollWheelZoom={false}>\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {locationObjects.length && locationObjects.map(object => {\r\n                    return (\r\n                        <Marker key={object.webId} position={object.location}>\r\n                            <Popup>\r\n                                <a target='_blank' href={object.webId}>{object.webId}</a>\r\n                            </Popup>\r\n                        </Marker>\r\n                    )\r\n                })}\r\n            </MapContainer>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MapComponent;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {availableViews} from \"../util/Util\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport ProfileCardComponent from \"./ProfileCardComponent\";\r\nimport {getFriends} from \"../util/FriendsController\";\r\nimport useContracts from \"../hooks/useContracts\";\r\n\r\nconst {default: data} = require('@solid/query-ldflex');\r\n\r\n\r\nconst FriendsOverviewComponent = (props) => {\r\n    const userContracts = useContracts(props.webId);\r\n    const friends = getFriends(userContracts, props.webId);\r\n\r\n    async function viewrequest(requestId) {\r\n        // const contract = await getContractData(marriageId)\r\n        const view = availableViews.friendshipview\r\n        view.args = {contractId: requestId}\r\n        props.setview(view)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h4>Friends overview</h4>\r\n            <br/>\r\n            <Row className='propertyview pageheader' key={'header'}>\r\n                <Col md={6}><label className=\"leftaligntext\"><b>Friend Request ID</b></label></Col>\r\n                <Col md={6}><label className=\"leftaligntext\">Friend</label></Col>\r\n            </Row>\r\n            {friends.map((friend, index) => {\r\n                return (\r\n                    <Row className='propertyview' key={friend.id + '-' + index}>\r\n                        <Col md={6}><label className=\"leftaligntext\"><a href={friend.contractId} target=\"_blank\">View\r\n                            request snippet</a></label></Col>\r\n                        <Col md={6}><ProfileCardComponent webId={friend.person.id} key={friend.person.id}/></Col>\r\n                    </Row>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsOverviewComponent\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst idlablogo = require('../assets/idlablogo.jpg');\r\n\r\nconst CreditsComponent = (props) => {\r\n    return(\r\n        <div className='container leftaligntext'>\r\n            <h4 className='container centeraligntext'>This demo was inspired by the demo developed by IDLab</h4>\r\n\r\n            <Row>\r\n                <Col md={1}/>\r\n                <Col md={11}>\r\n                    <p>This OSLO-Solid demo is a spin-off of the original demo, developed by <a target='_blank' href='https://www.ugent.be/ea/idlab/en'>IDLab</a>. They managed to create a demo where you can get married with Solid!</p>\r\n                    <p>Follow <a target='_blank' href='https://github.com/IDLabResearch/Solid-Marriage-Demo'>this link</a> to have a look at their demo</p>\r\n                </Col>\r\n            </Row>\r\n            <Row className='centeraligntext'>\r\n                <Col md={1}/>\r\n                <Col md={11}>\r\n                    <img src={idlablogo}/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreditsComponent;\r\n","import React from 'react'\r\nimport * as N3 from 'n3'\r\nimport NotificationsViewerComponent from '../Components/NotificationsViewerComponent'\r\nimport InProgressViewerComponent from '../Components/InProgressViewerComponent'\r\nimport ProfileViewerComponent from '../Components/ProfileViewerComponent'\r\nimport ProfileEditorComponent from '../Components/ProfileEditorComponent'\r\nimport HelpComponent from '../Components/HelpComponent'\r\nimport LoginComponent from '../Components/LoginComponent'\r\nimport PlaygroundComponent from \"../Components/PlaygroundComponent\";\r\nimport {getFile} from './FileUtil'\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\n\r\nimport ns from \"../util/NameSpaces\"\r\nimport {checkCache, setCache} from './Cache'\r\nimport DataUploadComponent from \"../Components/DataUploadComponent\";\r\nimport FriendRequestComponent from \"../Components/FriendRequestComponent\";\r\nimport FriendshipViewComponent from \"../Components/FriendshipViewComponent\";\r\nimport MapComponent from \"../Components/MapComponent\";\r\nimport FriendsOverviewComponent from \"../Components/FriendsOverviewComponent\";\r\nimport CreditsComponent from \"../Components/CreditsComponent\";\r\n\r\nconst {default: data} = require('@solid/query-ldflex');\r\nexport const validStatusCodes = [200, 201, 202]\r\n\r\nexport async function getPromiseValueOrUndefined(promise) {\r\n    try {\r\n        return await promise.value\r\n    } catch {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const availableViews = {\r\n    login: {\r\n        id: \"login\",\r\n        label: 'Solid',\r\n        generation: (props) => <LoginComponent {...props} ></LoginComponent>,\r\n        icon: <ExitToAppIcon/>\r\n    },\r\n    playground: {\r\n        id: \"playground\",\r\n        label: 'Playground',\r\n        generation: (props) => <PlaygroundComponent {...props} ></PlaygroundComponent>,\r\n        icon: <SportsEsportsIcon/>\r\n    },\r\n    upload: {\r\n        id: \"upload\",\r\n        label: 'Upload',\r\n        generation: (props) => <DataUploadComponent {...props}></DataUploadComponent>,\r\n        icon: <PublishIcon/>\r\n    },\r\n    friendrequest: {\r\n        id: \"friendrequest\",\r\n        label: 'Friend request',\r\n        generation: (props) => <FriendRequestComponent {...props}></FriendRequestComponent>,\r\n        icon: <GroupAddIcon/>\r\n    },\r\n    friendshipview:  {\r\n        id: \"friendshipview\",\r\n        label: 'Friendship details',\r\n        generation: (props) => <FriendshipViewComponent {...props}></FriendshipViewComponent>,\r\n        icon: <HelpIcon/>\r\n    },\r\n    friendoverview: {\r\n        id: \"friendoverview\",\r\n        label: \"Friends overview\",\r\n        generation: (props) => <FriendsOverviewComponent {...props}></FriendsOverviewComponent>,\r\n        icon: <GroupIcon/>\r\n    },\r\n    profile: {\r\n        id: \"profile\",\r\n        label: 'Profile',\r\n        generation: (props) => <ProfileViewerComponent {...props} ></ProfileViewerComponent>,\r\n        icon: <PersonIcon/>\r\n    },\r\n    profileeditor: {\r\n        id: \"profileedit\",\r\n        label: 'Profile Editor',\r\n        generation: (props) => <ProfileEditorComponent {...props} ></ProfileEditorComponent>,\r\n        icon: <HelpIcon/>\r\n    },\r\n    map: {\r\n        id: \"map\",\r\n        label: 'Map',\r\n        generation: (props) => <MapComponent {...props}></MapComponent>,\r\n        icon: <MapIcon/>\r\n    },\r\n    running: {\r\n        id: \"running\",\r\n        label: 'Running requests',\r\n        generation: (props) => <InProgressViewerComponent {...props}></InProgressViewerComponent>,\r\n        icon: <ListIcon/>\r\n    },\r\n    notifications: {\r\n        id: \"notifications\",\r\n        label: 'Notifications',\r\n        generation: (props) => <NotificationsViewerComponent {...props}></NotificationsViewerComponent>,\r\n        icon: <NotificationsIcon/>\r\n    },\r\n    help: {\r\n        id: \"help\",\r\n        label: 'Help',\r\n        generation: (props) => <HelpComponent {...props}></HelpComponent>,\r\n        icon: <HelpIcon/>\r\n    },\r\n    credits: {\r\n        id: \"credits\",\r\n        label: 'Credits',\r\n        generation: (props) => <CreditsComponent {...props}></CreditsComponent>,\r\n        icon: <CopyrightIcon/>\r\n    }\r\n}\r\n\r\nexport const activeDrawerItemMapping = {\r\n    profile: \"profile\",\r\n    playground: \"playground\",\r\n    upload: \"upload\",\r\n    profileeditor: \"profile\",\r\n    friendrequest: \"requests\",\r\n    friendshipview: \"running\",\r\n    running: \"running\",\r\n    notifications: \"notifications\",\r\n    help: \"help\",\r\n    credits: \"credits\"\r\n}\r\n\r\nexport async function getStore(URI, useCache = true, ttl = null) {\r\n    let cached = null\r\n    if (useCache) cached = checkCache(URI)\r\n    if (cached) return cached;\r\n    try {\r\n        const response = await getFile(URI)\r\n        const code = (await response).status\r\n        if (validStatusCodes.indexOf(code) === -1) {\r\n            return null;\r\n        }\r\n        const responseData = await response.text()\r\n\r\n        // If concurrent requests already filled cache\r\n        if (useCache) cached = checkCache(URI)\r\n        if (cached) return cached;\r\n\r\n        const store = new N3.Store()\r\n        store.addQuads(await new N3.Parser({baseIRI: URI}).parse(responseData))\r\n        if (store) {\r\n            if (!checkCache(URI)) setCache(URI, store, ttl);\r\n        }\r\n        return store\r\n    } catch (e) {\r\n        console.error(e)\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nconst getQuadObjVal = quads => quads[0] && (quads[0].object.value || quads[0].object.id)\r\n\r\nconst getQuadObjList = quads => quads && quads.map(quad => quad.object.value || quad.object.id)\r\n\r\nexport async function uploadDataSnippet(location, data) {\r\n    const response = await fetch(location, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/ld+json'\r\n        },\r\n        body: data\r\n    });\r\n    return response;\r\n}\r\n\r\nexport async function getContractData(id) {\r\n    id = await id;\r\n    if (!id) return null\r\n    const datastore = await getStore(id);\r\n    return datastore && {\r\n        id: id,\r\n        type: getQuadObjVal(await datastore.getQuads(id, ns.rdf('type'))),\r\n        creator: getQuadObjVal(await datastore.getQuads(id, ns.dct('creator'))),\r\n        created: getQuadObjVal(await datastore.getQuads(id, ns.dct('created'))),\r\n        status: getQuadObjVal(await datastore.getQuads(id, ns.demo('status'))),\r\n        person: getQuadObjList(await datastore.getQuads(id, ns.dbo('person'))).map(e => {\r\n            return({id: e})\r\n        })\r\n    }\r\n}\r\n\r\nexport async function getProfileData(id, cached = true) {\r\n    id = await id;\r\n    if (!id) return null\r\n    const datastore = await getStore(id, cached);\r\n    return datastore && {\r\n        id: id,\r\n        name: getQuadObjVal(await datastore.getQuads(id, ns.foaf('name'))),\r\n        bdate: getQuadObjVal(await datastore.getQuads(id, ns.dbo('birthDate'))),\r\n        location: getQuadObjVal(await datastore.getQuads(id, ns.dbo('location'))),\r\n        // cstatus: getQuadObjVal(await datastore.getQuads(id, ns.demo('civilstatus'))),\r\n    }\r\n}\r\n\r\nexport async function getProfileContracts(id) {\r\n    id = await id;\r\n    if (!id) return null\r\n    const datastore = await getStore(id);\r\n    return datastore && getQuadObjList(await datastore.getQuads(id, ns.demo('hasContract')))\r\n}\r\n\r\nexport async function getNotificationTypes(activity) {\r\n    const types = {}\r\n    let count = 0\r\n    for (const property of ['actor', 'object', 'target']) {\r\n        if (activity[property]) {\r\n            if (typeof (activity[property]) === 'string') {\r\n                try {\r\n                    types[property] = await getItemType(activity[property])\r\n                } // `${await data[activity[property]].type}`}\r\n                catch {\r\n                    types[property] = null\r\n                }\r\n            } else if (typeof (activity[property]) === 'object') {\r\n                types[property] = await getNotificationTypes(activity[property])\r\n            }\r\n        }\r\n    }\r\n    return types\r\n}\r\n\r\nexport async function getItemType(itemId) {\r\n    if (!itemId) return false;\r\n    const store = await getStore(itemId)\r\n    if (!store) throw new Error('Could not retrieve notification type for ' + itemId)\r\n    return store && getQuadObjVal(await store.getQuads(itemId, ns.rdf('type')))\r\n\r\n}\r\n\r\nexport function formatDate(date) {\r\n    date = new Date(date)\r\n    var dd = String(date.getDate()).padStart(2, '0');\r\n    var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = date.getFullYear();\r\n    return (mm + '/' + dd + '/' + yyyy)\r\n}\r\n","import {deleteFile, patchFile, putFile} from \"./FileUtil\";\r\nimport ns from \"./NameSpaces\";\r\nimport {DataFactory, Writer, Quad, Variable, Parser, Store} from \"n3\";\r\nimport {createContractStatusPatch, quadListToTTL} from \"./QueryUtil\";\r\nimport notify from \"./notifications\";\r\nimport useContracts from \"../hooks/useContracts\";\r\nimport {parseURL} from \"url-toolkit\";\r\nimport {useState} from \"react\";\r\n\r\nconst wkt = require('wkt');\r\nconst { parse } = require('wkt');\r\n\r\nconst {namedNode, blankNode, literal, quad, variable} = DataFactory;\r\n\r\n\r\n/**\r\n *\r\n * TODO: changes paramas --> @param {*} proposalContacts : [{ label: \"Spouse\" | \"Witness\", type: \"spouse\" | \"witness\", webID: string, id: number}]\r\n */\r\nexport async function createFriendRequest(proposalContacts, storageLocation, webId) {\r\n    let proposalId = storageLocation.endsWith('/') ? storageLocation : storageLocation + '/'\r\n    proposalId = proposalId + getProposalName()\r\n    if (proposalContacts.filter(e => e.type === 'person').length <= 1) throw new Error('A friend request requires 2 persons to be specified.')\r\n\r\n    // Create file with proposal on proposalId\r\n    const postbody = await createFriendRequestBody(proposalContacts, webId);\r\n    const post = await putFile(proposalId, postbody)\r\n\r\n    // Patch profile with information on created proposal\r\n    const patchbody = await addContractPatch(webId, proposalId);\r\n    const patch = await patchFile(webId, patchbody)\r\n\r\n    // Create and send notifications to all parties involved\r\n    const sentContacts = [];\r\n    for (let contact of proposalContacts) {\r\n        if (sentContacts.indexOf(contact.webId) === -1) {\r\n            sendContactInvitation(webId, contact.webId, proposalId)\r\n            sentContacts.push(contact.webId)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function sendContactInvitation(webId, contactId, proposalId) {\r\n    return notify(await createFriendRequestInvitation(webId, contactId, proposalId), [contactId])\r\n}\r\n\r\nexport async function deleteRequest(proposalId, webId) {\r\n    // Remove proposal and patch profile to remove reference.\r\n    const patchbody = await deleteRequestProfilePatch(webId, proposalId)\r\n    const result = await deleteFile(proposalId)\r\n    const patch = await patchFile(webId, patchbody)\r\n}\r\n\r\n/**\r\n * Accept the invitation of the marriage proposal to be a spouse / witness\r\n * @param {string} webId - The WebId of the invitee\r\n * @param {string} proposalId - The URI of the proposal\r\n */\r\nexport async function acceptRequest(webId, proposalId, authorId) {\r\n    const patchbody = 'INSERT {' + await quadListToTTL([quad(namedNode(webId), namedNode(ns.demo('accepted')), namedNode(proposalId))]) + ' }';\r\n    const patch = await patchFile(webId, patchbody)\r\n    const notification = await createAcceptanceNotification(webId, proposalId, authorId)\r\n    notify(notification, [authorId])\r\n}\r\n\r\n/**\r\n * Refuse the invitation of the marriage proposal to be a spouse / witness\r\n * @param {string} webId - The WebId of the invitee\r\n * @param {string} proposalId - The URI of the proposal\r\n */\r\nexport async function refuseRequest(webId, proposalId, authorId) {\r\n    const patchbody = 'INSERT {' + await quadListToTTL([quad(namedNode(webId), namedNode(ns.demo('refused')), namedNode(proposalId))]) + ' }';\r\n    const patch = await patchFile(webId, patchbody)\r\n    const notification = await createRejectionNotification(webId, proposalId, authorId)\r\n    notify(notification, [authorId])\r\n}\r\n\r\nexport async function officiateRequest(webId, contractId, contacts) {\r\n    //TODO: create notification that friendship is official\r\n    //TODO: update contract status to 'FRIENDS'\r\n    contacts.map(async (contact, index) => {\r\n        const notification = createFriendRequestOfficialNotification(webId, contact.id, contractId);\r\n        await notify(notification, [contact.id]);\r\n    })\r\n\r\n    // Create submission notification\r\n    //const notification = createMarriageContractSubmissionNotification(webId, contractId, officialId)\r\n    //await notify(notification, [officialId])\r\n\r\n    // update marriage contract proposal to submitted\r\n    await updateFriendRequestStatus(contractId, \"official\")\r\n}\r\n\r\n\r\n/**\r\n * Update the status of the marriage contract proposal.\r\n * @param {'pending' | 'official' | 'accepted' | 'rejected'} newStatus\r\n */\r\nexport async function updateFriendRequestStatus(contractId, newStatus) {\r\n    const status = ns.demo(newStatus)\r\n    const patchbody = await createContractStatusPatch(contractId, status);\r\n    const patch = await patchFile(contractId, patchbody)\r\n    return patch.status\r\n}\r\n\r\n/**\r\n * Create Friend Request body (ttl)\r\n * TODO: change params --> @param {spouse: [], witness: []} marriageInfo required to contain a spouse field with an array of 2 webIds, and a witness field with an array of more than 1 webId\r\n */\r\nasync function createFriendRequestBody(proposalData, creatorId) {\r\n    const quadList = [quad(namedNode(''), namedNode(ns.rdf('type')), namedNode(ns.demo('FriendRequest'))),\r\n        quad(namedNode(''), namedNode(ns.dct('creator')), namedNode(creatorId)),\r\n        quad(namedNode(''), namedNode(ns.dct('created')), literal(new Date().toISOString(), namedNode(ns.xsd('dateTime')))),\r\n        quad(namedNode(''), namedNode(ns.demo('status')), namedNode(ns.demo('proposal')))]\r\n    for (let person of proposalData.filter(e => e.type === 'person'))\r\n        quadList.push(quad(namedNode(''), namedNode(ns.dbo('person')), namedNode(person.webId)))\r\n    return await quadListToTTL(quadList);\r\n}\r\n\r\nexport function createAcceptanceNotification(webId, proposalId, authorId) {\r\n    return `\r\n    @prefix as: <https://www.w3.org/ns/activitystreams#> .\r\n    <> a as:Accept ;\r\n      as:actor <${webId}> ;\r\n      as:object [ \r\n        a as:Invite ;\r\n        as:actor <${authorId}> ;\r\n        as:object <${webId}> ;\r\n        as:target <${proposalId}> ;\r\n      ] ;\r\n      as:target <${proposalId}> ;\r\n      as:summary \"Accepted the offer to participate in the marriage contract\" .\r\n  `\r\n}\r\n\r\nexport function createRejectionNotification(webId, proposalId, authorId) {\r\n    return `\r\n    @prefix as: <https://www.w3.org/ns/activitystreams#> .\r\n    <> a as:Reject ;\r\n      as:actor <${webId}> ;\r\n      as:object [ \r\n        a as:Invite ;\r\n        as:actor <${authorId}>  ;\r\n        as:object <${webId}> ;\r\n        as:target <${proposalId}> ;\r\n      ] ;\r\n      as:target <${proposalId}> ;\r\n      as:summary \"Rejection of the offer to participate in the marriage contract\" .\r\n  `\r\n}\r\n\r\nexport function createFriendRequestOfficialNotification(webId, contactId, friendRequestId) {\r\n    return `\r\n    @prefix as: <https://www.w3.org/ns/activitystreams#> .\r\n    <> a as:Announce ;\r\n      as:actor <${webId}> ;\r\n      as:object <${contactId}>;\r\n      as:target <${friendRequestId}> ;\r\n      as:summary \"Announcement that the friendship if now official\" .\r\n    `\r\n}\r\n\r\nexport function createFriendRequestInvitation(webId, contactId, friendRequestId) {\r\n    return `\r\n    @prefix as: <https://www.w3.org/ns/activitystreams#> .\r\n    <> a as:Offer ;\r\n      as:actor <${webId}> ;\r\n      as:object <${contactId}> ;\r\n      as:target <${friendRequestId}> ;\r\n      as:summary \"Offer to participate in the friendship\" .\r\n  `\r\n}\r\n\r\nexport function getFriends(contracts, webId) {\r\n    let contacts = [];\r\n    if (contracts && contracts.length) {\r\n        const filteredContracts = contracts.filter(e => !e.status || e.status === ns.demo('official'));\r\n        filteredContracts.map((contract) => {\r\n            const person = contract.person.length === 1 ? contract.person[0] : contract.person.filter(e => e.id !== webId)[0];\r\n            contacts.push({contractId: contract.id, person: person})\r\n        })\r\n    }\r\n    return contacts;\r\n}\r\n\r\nexport async function getFriendLocations(friends) {\r\n    let locationObjects = [];\r\n\r\n    const promises = friends.map( async (friend) => {\r\n        const parsedURI = parseURL(friend.person.id);\r\n        const snippetLocation = parsedURI.scheme + parsedURI.netLoc + '/public/person.ttl';\r\n\r\n        const response = await fetch(snippetLocation);\r\n        const data = await response.text();\r\n\r\n        parseSnippetData(data).then( wktString => {\r\n            const location = wkt.parse(wktString);\r\n            locationObjects.push({webId: friend.person.id, location: [location.coordinates[1], location.coordinates[0]]});\r\n        });\r\n\r\n    });\r\n    return Promise.all(promises).then( () => {\r\n        return locationObjects;\r\n    })\r\n\r\n}\r\n\r\nfunction parseSnippetData(data){\r\n    const parser = new Parser();\r\n    return new Promise( (resolve => {\r\n        parser.parse(data, (err, quad, pref) => {\r\n            if(quad && extractLocation(quad)){\r\n                resolve(extractLocation(quad));\r\n            }\r\n        });\r\n    }));\r\n}\r\n\r\nfunction extractLocation(quad) {\r\n    return quad && quad.predicate.value === \"http://www.opengis.net/ont/geosparql#asWKT\" ? quad.object.value : null;\r\n}\r\n\r\nexport async function deleteRequestProfilePatch(webId, proposalId) {\r\n    return `DELETE { ${await quadListToTTL([quad(namedNode(webId), namedNode(ns.demo('hasContract')), namedNode(proposalId))])} } `\r\n}\r\n\r\n/**\r\n * HELPER FUNCTIONS\r\n */\r\n\r\n/**\r\n * Get unique proposal file name\r\n */\r\nconst getProposalName = () => {\r\n    const s = \"friendrequest\" + new Date().toISOString()\r\n    return encodeURIComponent(s) + '.ttl'\r\n}\r\n\r\nexport async function addContractPatch(webId, proposalId) {\r\n    return `INSERT { ${await quadListToTTL([quad(namedNode(webId), namedNode(ns.demo('hasContract')), namedNode(proposalId))])} } `\r\n}\r\n\r\nexport async function patchProfileWithContract(webId, contractId) {\r\n    const patchbody = await addContractPatch(webId, contractId)\r\n    const patch = await patchFile(webId, patchbody)\r\n}\r\n","import { DataFactory, Writer, Quad } from \"n3\";\r\nimport ns from \"../util/NameSpaces\"\r\n\r\nconst { default: data } = require('@solid/query-ldflex');\r\n\r\nconst { namedNode, literal, quad, variable } = DataFactory;\r\n\r\nexport async function createDeleteInsertProfileDataQuery(webId, oldprofile, newprofile) {\r\n  const deleteClause = []\r\n  // const insertClause = []\r\n\r\n  const insertClause = [\r\n    quad(namedNode(webId), namedNode(ns.foaf('name')), literal(newprofile.name)),\r\n    quad(namedNode(webId), namedNode(ns.dbo('birthDate')), literal(newprofile.bdate, namedNode(ns.xsd('date')))),\r\n    quad(namedNode(webId), namedNode(ns.dbo('location')), literal(newprofile.location)),\r\n    // quad(namedNode(webId), namedNode(ns.demo('civilstatus')), literal(newprofile.cstatus)),\r\n  ]\r\n\r\n  if (oldprofile.name) {\r\n    deleteClause.push(quad(namedNode(webId), namedNode(ns.foaf('name')), literal(oldprofile.name)))\r\n  } if (oldprofile.bdate) {\r\n    deleteClause.push(quad(namedNode(webId), namedNode(ns.dbo('birthDate')), literal(oldprofile.bdate, namedNode(ns.xsd('date')))))\r\n  } if (oldprofile.location) {\r\n    deleteClause.push(quad(namedNode(webId), namedNode(ns.dbo('location')), literal(oldprofile.location)))\r\n  // } if (oldprofile.cstatus) {\r\n  //   deleteClause.push(quad(namedNode(webId), namedNode(ns.demo('civilstatus')), literal(oldprofile.cstatus)))\r\n  }\r\n\r\n  const deleteClauseString = deleteClause.length ? `DELETE { ${await quadListToTTL(deleteClause)} }` : ''\r\n  const insertClauseString = insertClause.length ? `INSERT { ${await quadListToTTL(insertClause)} }` : ''\r\n  const whereClauseString = deleteClause.length ? `WHERE { ${await quadListToTTL(deleteClause)} }` : ''\r\n\r\n\r\n  return(`\r\n    ${deleteClauseString}\r\n    ${insertClauseString}\r\n    ${whereClauseString}\r\n  `)\r\n}\r\n\r\n/**\r\n * Create patch for the status of the marriage contract proposal.\r\n * @param {'pending' | 'sumitted' | 'accepted' | 'refused'} newStatus\r\n */\r\nexport async function createContractStatusPatch(contractId, newStatus) {\r\n  const statusvar = variable(\"status\")\r\n  const deleteClause = [quad(namedNode(contractId), namedNode(ns.demo('status')), statusvar)]\r\n  const insertClause = [quad(namedNode(contractId), namedNode(ns.demo('status')), namedNode(newStatus))]\r\n  return(`\r\n    ${`DELETE { ${await quadListToTTL(deleteClause)} }`}\r\n    ${`INSERT { ${await quadListToTTL(insertClause)} }`}\r\n    ${`WHERE { ${await quadListToTTL(deleteClause)} }`}\r\n  `)\r\n}\r\n\r\n\r\nexport async function quadListToTTL(quadList) {\r\n  return new Promise((resolve, reject) => {\r\n    const writer = new Writer();\r\n    writer.addQuads(quadList)\r\n    writer.end((error, result) => {\r\n      if (error || !result) reject(error || \"Could not generate ttl file from quads\")\r\n      resolve(result)\r\n    });\r\n  })\r\n}\r\n","const TTLCache = require(\"cache\");\r\nconst DEFAULTTTL = 5 * 1000\r\nvar Cache = (function () {\r\n  var instance;\r\n\r\n  function createInstance() {\r\n      return new TTLCache(DEFAULTTTL);   \r\n  }\r\n\r\n  return {\r\n      getInstance: function () {\r\n          if (!instance) {\r\n              instance = createInstance();\r\n          }\r\n          return instance;\r\n      },\r\n      reset: function() {\r\n        instance = createInstance();\r\n      }\r\n  };\r\n})();\r\n\r\nexport function checkCache(key) {\r\n  const cache = Cache.getInstance();\r\n  return cache && cache.get(key)\r\n}\r\n\r\nexport function setCache(key, value, ttl) {\r\n  const cache = Cache.getInstance();\r\n  ttl = ttl || DEFAULTTTL;\r\n  return cache && cache.put(key, value, ttl)\r\n}\r\n\r\n\r\nexport function delCache(key) {\r\n  const cache = Cache.getInstance();\r\n  return cache && cache.del(key)\r\n}\r\n\r\nexport function clearCache(){\r\n  Cache.reset();\r\n}\r\n"],"sourceRoot":""}